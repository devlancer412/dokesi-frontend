{"version":3,"sources":["components/Drawer.tsx","components/Navbar.tsx","components/MintCountdown.tsx","components/MintButton.tsx","pages/Home.tsx","pages/Mint.tsx","fonts/Londrina/LondrinaSolid-Black.ttf","components/Theme.js","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx","services/utils.ts","services/connection.tsx","services/candy-machine.ts"],"names":["useStyles","makeStyles","theme","paper","backgroundColor","icon","color","position","top","right","navlinks","display","justifyContent","background","boxShadow","borderRadius","padding","link","textDecoration","fontSize","margin","spacing","borderBottom","cursor","DrawerComponent","classes","useState","openDrawer","setOpenDrawer","Drawer","open","onClose","anchor","className","activeClass","to","spy","smooth","offset","duration","IconButton","onClick","ConnectButton","styled","WalletDialogButton","ConnectAfter","div","createStyles","root","flexGrow","appbarClass","backdropFilter","title","lineHeight","fontFamily","fontWeight","marginBottom","backgroundImage","backgroundRepeat","backgroundSize","Navbar","wallet","useWallet","navigate","useNavigate","matchesMD","useMediaQuery","matchesSM","matchesXS","isMintPage","window","location","pathname","AppBar","Toolbar","style","Typography","connected","width","height","flexDirection","alignContent","alignItems","done","paddingTop","paddingBottom","paddingRight","paddingLeft","fontStyle","letterSpacing","textTransform","item","MintCountdown","date","status","onComplete","matchesXXS","renderer","days","hours","minutes","seconds","completed","Paper","elevation","CTAButton","Button","MintButton","onMint","candyMachine","isMinting","setIsMinting","isActive","connection","useConnection","verified","setVerified","useGateway","requestGatewayToken","gatewayStatus","webSocketSubscriptionId","setWebSocketSubscriptionId","clicked","setClicked","useEffect","mint","a","removeAccountChangeListener","previousGatewayStatus","value","ref","useRef","current","usePrevious","fromStates","GatewayStatus","NOT_REQUESTED","REFRESH_TOKEN_REQUIRED","invalidToStates","UNKNOWN","find","state","console","log","disabled","gatekeeper","network","gatekeeperNetwork","toBase58","ACTIVE","findGatewayToken","publicKey","gatewayToken","isValid","getGatewayTokenAddressForOwnerAndGatekeeperNetwork","gatewayTokenAddress","onGatewayTokenChange","Error","variant","isSoldOut","CircularProgress","isPresale","isWhitelistOnly","lower","high","HeaderBack","FirstContainer","SingerImg","img","RightBox","clipMe","borderWidth","keyframes","BB","MintBox","ValueViewPane","TextContainder","LabelText","label","ValueText","VerticalSeparator","HorizontalSeparator","BackgroundImage","SecondContainer","QueryLabel","QueryLabelTitle","h1","QueryLabelSub","QueryForm","form","QueryInput","input","props","float","QueryText","textarea","SendMsgBtn","button","MintContainer","getCountdownDate","endSettings","endSettingType","toDate","number","goLiveDate","Date","getTime","undefined","Mint","isUserMinting","setIsUserMinting","setCandyMachine","message","severity","alertState","setAlertState","setIsActive","endDate","setEndDate","itemsRemaining","setItemsRemaining","isWhitelistUser","setIsWhitelistUser","setIsPresale","discountPrice","setDiscountPrice","needTxnSplit","setNeedTxnSplit","setupTxn","setSetupTxn","fullName","setFullName","email","setEmail","qmessage","setQMessage","rpcUrl","rpcHost","anchorWallet","useMemo","signAllTransactions","signTransaction","refreshCandyMachineState","useCallback","candyMachineId","getCandyMachineState","cndy","active","toNumber","presale","whitelistMintSettings","PublicKey","getAtaForMint","token","getTokenAccountBalance","balance","valid","parseInt","amount","limit","Math","min","itemsAvailable","itemsRedeemed","getCollectionPDA","collectionPDA","program","provider","getAccountInfo","collectionPDAAccount","txnEstimate","retainAuthority","tokenMint","mode","burnEveryTime","expireOnUse","noHide","startsWith","beforeTransactions","afterTransactions","document","getElementById","click","createAccountsForMint","setupMint","err","transaction","awaitTransactionSignatureConfirmation","txTimeout","mintOneToken","mintOne","mintTxId","remaining","msg","code","reload","indexOf","toggleMintButton","now","src","bottom","alt","loading","formatNumber","asNumber","price","align","CANDY_MACHINE_PROGRAM","clusterUrl","handleTransaction","signatures","sig","equals","setTimeout","sendTransaction","error","broadcastTransaction","options","autoShowModal","val","marginTop","placeholder","onChange","e","target","Snackbar","autoHideDuration","Alert","londrinaSolidBlack","fontDisplay","LondrinaSolidBlack","unicodeRange","createTheme","typography","join","palette","type","overrides","MuiCssBaseline","boxSizing","menuButton","marginRight","copyright","textAlign","zIndex","linkshadow","left","transform","Footer","order","href","BottomJumpKeyFrame","BorderKeyFrame","length","ShadowKeyFrame","FlyKeyFrame","BackManKeyFrame","CarouselKeyFrame","BackLetterKeyFrame","HomeContainer","TitlePart","RedSpane","span","HomeMan","AboutContainer","AboutBox","FlyPane","AboutUsMan","BackMan1","TrendingContainer","CarouselItem","CarouselView","CarouselPane","RoadmapContainer","Roadmap","RoadmapBackLine","RoadmapItem","trans","BackMan2","BackLetterView","BackLetterPane","FAQContainer","FAQList","ClosedFAQ","OpenedFAQ","BB1","TeamContainer","MemberContainer","TeamMember","JumpManKeyFrame","RoadmapData","description","FaqData","question","answer","Home","faqIndex","setFaqIndex","useInView","threshold","inView","clickFaqHandler","entry","index","id","animationDelay","animationPlayState","map","data","animateIn","animateOnce","process","getCandyMachineId","Connection","App","endpoint","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSlopeWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","ConnectionProvider","WalletProvider","autoConnect","path","element","DEFAULT_TIMEOUT","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","numberFormater","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","LAMPORTS_PER_SOL","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","CIVIC","buyer","findProgramAddress","toBuffer","TOKEN_PROGRAM_ID","getNetworkExpire","Buffer","from","getNetworkToken","SequenceType","getErrorForTransaction","txid","confirmTransaction","getParsedConfirmedTransaction","tx","errors","meta","logMessages","forEach","m","regex","exec","lastIndex","push","sendTransactions","instructionSet","signersSet","sequenceType","Parallel","commitment","successCallback","ind","failCallback","block","WalletNotConnectedError","unsignedTxns","getRecentBlockhash","i","instructions","signers","Transaction","instruction","add","recentBlockhash","blockhash","setSigners","s","partialSign","partiallySignedTransactions","filter","t","fullySignedTransactions","signedTxns","concat","pendingTxns","signedTxnPromise","sendSignedTransaction","signedTransaction","slot","StopOnFailure","Promise","all","txs","result","awaitConfirmation","includesFeePayer","rawTransaction","serialize","skipPreflight","sendRawTransaction","confirmation","getUnixTs","timeout","startTime","sleep","simulateResult","simulateTransaction","logs","line","slice","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","toString","args","encoding","_rpcRequest","res","queryStatus","confirmations","subId","resolve","reject","onSignature","context","getSignatureStatuses","signatureStatuses","_signatureSubscriptions","removeSignatureListener","ms","TOKEN_METADATA_PROGRAM_ID","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","SYSVAR_RENT_PUBKEY","TransactionInstruction","preflightCommitment","fetchIdl","idl","account","fetch","authority","treasury","hiddenSettings","getMasterEdition","getMetadata","getCandyMachineCreator","candyMachineAddress","getCollectionAuthorityRecordPDA","newAuthority","Keypair","generate","userTokenAccountAddress","MintLayout","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","Token","createInitMintInstruction","createMintToInstruction","userTokenAccount","setupState","userPayingAccountAddress","remainingAccounts","cleanupInstructions","whitelistToken","whitelistBurnAuthority","createApproveInstruction","createRevokeInstruction","transferAuthority","metadataAddress","masterEdition","candyMachineCreator","creatorBump","rm","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","SYSVAR_SLOT_HASHES_PUBKEY","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","collectionPda","collectionData","collectionMint","collectionAuthorityRecord","collectionMetadata","collectionMasterEdition","setCollectionDuringMint","instructionsMatrix","signersMatrix"],"mappings":"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","file":"static/js/main.8784ec7d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Drawer, IconButton, makeStyles, Theme } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n    position: \"absolute\",\r\n    top: \"10px\",\r\n    right: \"10px\",\r\n  },\r\n  navlinks: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    background: \"rgba(0, 0, 0, 0.34)\",\r\n    boxShadow: \"0px 10px 80px rgba(0, 0, 0, 0.09)\",\r\n    borderRadius: \"56px\",\r\n    padding: \"10px\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    fontSize: \"12px\",\r\n    margin: theme.spacing(1),\r\n    \"&:hover\": {\r\n      color: \"yellow\",\r\n      borderBottom: \"1px solid yellow\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst DrawerComponent = () => {\r\n  const classes = useStyles();\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  return (\r\n    <>\r\n      <Drawer\r\n        open={openDrawer}\r\n        onClose={() => setOpenDrawer(false)}\r\n        anchor={\"top\"}\r\n        classes={{ paper: classes.paper }}\r\n      >\r\n        <div className={classes.navlinks}>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"home\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}\r\n            className={classes.link}\r\n          >\r\n            Home\r\n          </Link>\r\n\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"about\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}\r\n            className={classes.link}\r\n          >\r\n            About us\r\n          </Link>\r\n\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"roadmap\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}\r\n            className={classes.link}\r\n          >\r\n            Roadmap\r\n          </Link>\r\n\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"faq\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}\r\n            className={classes.link}\r\n          >\r\n            FAQ\r\n          </Link>\r\n\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"team\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}\r\n            className={classes.link}\r\n          >\r\n            Team\r\n          </Link>\r\n        </div>\r\n      </Drawer>\r\n      <IconButton\r\n        onClick={() => setOpenDrawer(!openDrawer)}\r\n        className={classes.icon}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\nexport default DrawerComponent;\r\n","import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useWallet } from \"@solana/wallet-adapter-react\";\r\nimport styled from \"styled-components\";\r\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport DrawerComponent from \"./Drawer\";\r\n\r\nconst ConnectButton = styled(WalletDialogButton)`\r\n  background: url(\"/assets/image/redbtn-small-back.png\");\r\n  background-color: transparent;\r\n  box-shadow: none;\r\n  background-repeat: no-repeat;\r\n  background-size: 204px 64px;\r\n  text-transform: none;\r\n  margin: 10px 100px 10px 0px;\r\n  padding: 15px 50px 20px;\r\n  font-size: 17px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst ConnectAfter = styled.div`\r\n  background: url(\"/assets/image/redbtn-small-back.png\");\r\n  background-repeat: no-repeat;\r\n  background-size: 186px 59px;\r\n  text-transform: none;\r\n  margin: 10px 100px 10px 0px;\r\n  padding: 15px 50px 20px;\r\n  font-size: 17px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    appbarClass: {\r\n      background: \"rgba(217, 217, 217, 0.15)\",\r\n      backdropFilter: \"blur(7px)\",\r\n    },\r\n    title: {\r\n      fontSize: \"46px\",\r\n      lineHeight: \"100px\",\r\n      fontFamily: \"Londrina Solid\",\r\n      fontWeight: 900,\r\n      marginBottom: \"4px\",\r\n      backgroundImage: `url(\"/assets/image/title-back.png\")`,\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"cover\",\r\n      padding: \"0px 110px\",\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    navlinks: {\r\n      margin: \"0px 90px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      background: \"rgba(0, 0, 0, 0.34)\",\r\n      boxShadow: \"0px 10px 80px rgba(0, 0, 0, 0.09)\",\r\n      borderRadius: \"56px\",\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: \"white\",\r\n      fontSize: \"17px\",\r\n      margin: theme.spacing(2),\r\n      \"&:hover\": {\r\n        color: \"yellow\",\r\n        borderBottom: \"1px solid yellow\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const wallet = useWallet();\r\n  const navigate = useNavigate();\r\n  const matchesMD = useMediaQuery(\"(max-width:1366px)\");\r\n  const matchesSM = useMediaQuery(\"(max-width:1100px)\");\r\n  const matchesXS = useMediaQuery(\"(max-width:750px)\");\r\n\r\n  const goToHome = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const isMintPage = window.location.pathname === \"/mint\";\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" className={classes.appbarClass}>\r\n        <Toolbar style={{ padding: \"0px\", justifyContent: \"space-between\" }}>\r\n          <Typography\r\n            className={classes.title}\r\n            style={\r\n              matchesXS\r\n                ? {\r\n                    fontSize: \"24px\",\r\n                    backgroundSize: \"100% 68px\",\r\n                    lineHeight: \"68px\",\r\n                    padding: \"0px 40px\",\r\n                  }\r\n                : matchesMD\r\n                ? {\r\n                    fontSize: \"30px\",\r\n                    backgroundSize: \"300px auto\",\r\n                    lineHeight: \"84px\",\r\n                  }\r\n                : {}\r\n            }\r\n            onClick={goToHome}\r\n          >\r\n            DOKESI\r\n          </Typography>\r\n          {isMintPage ? null : (\r\n            <div style={{ flexGrow: 1 }}>\r\n              {matchesXS ? (\r\n                <DrawerComponent />\r\n              ) : (\r\n                <div\r\n                  className={classes.navlinks}\r\n                  style={{\r\n                    margin: `${matchesMD ? \"0px 10px 0px 0px\" : \"0px 90px\"}`,\r\n                  }}\r\n                >\r\n                  <Link\r\n                    activeClass=\"active\"\r\n                    to=\"home\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={-70}\r\n                    duration={500}\r\n                    className={classes.link}\r\n                  >\r\n                    Home\r\n                  </Link>\r\n\r\n                  <Link\r\n                    activeClass=\"active\"\r\n                    to=\"about\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={-70}\r\n                    duration={500}\r\n                    className={classes.link}\r\n                  >\r\n                    About us\r\n                  </Link>\r\n\r\n                  <Link\r\n                    activeClass=\"active\"\r\n                    to=\"roadmap\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={-70}\r\n                    duration={500}\r\n                    className={classes.link}\r\n                  >\r\n                    Roadmap\r\n                  </Link>\r\n\r\n                  <Link\r\n                    activeClass=\"active\"\r\n                    to=\"faq\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={-70}\r\n                    duration={500}\r\n                    className={classes.link}\r\n                  >\r\n                    FAQ\r\n                  </Link>\r\n\r\n                  <Link\r\n                    activeClass=\"active\"\r\n                    to=\"team\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={-70}\r\n                    duration={500}\r\n                    className={classes.link}\r\n                  >\r\n                    Team\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          {!wallet.connected ? (\r\n            <ConnectButton\r\n              style={{ display: `${matchesSM ? \"none\" : \"block\"}` }}\r\n            >\r\n              Connect Wallet\r\n            </ConnectButton>\r\n          ) : (\r\n            <ConnectAfter\r\n              style={{ display: `${matchesSM ? \"none\" : \"block\"}` }}\r\n            >\r\n              Connected\r\n            </ConnectAfter>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Paper, useMediaQuery } from \"@material-ui/core\";\r\nimport Countdown from \"react-countdown\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(0),\r\n      \"& > *\": {\r\n        margin: theme.spacing(0.4),\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignContent: \"center\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        background: \"#384457\",\r\n        color: \"white\",\r\n        borderRadius: 5,\r\n        fontSize: 10,\r\n      },\r\n    },\r\n    done: {\r\n      display: \"flex\",\r\n      margin: 0,\r\n      marginBottom: theme.spacing(0.5),\r\n      height: theme.spacing(3.5),\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      paddingRight: theme.spacing(5),\r\n      paddingLeft: theme.spacing(5),\r\n      flexDirection: \"column\",\r\n      alignContent: \"center\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      background: \"#1B201D\",\r\n      color: \"#56FB84\",\r\n      borderRadius: 5,\r\n      fontSize: 35,\r\n      fontFamily: \"Londrina Solid\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 400,\r\n      lineHeight: \"41px\",\r\n      letterSpacing: \"1px\",\r\n      textTransform: \"none\",\r\n    },\r\n    item: {\r\n      fontWeight: \"bold\",\r\n      fontSize: 18,\r\n    },\r\n  })\r\n);\r\n\r\ninterface MintCountdownProps {\r\n  date: Date | undefined;\r\n  style?: React.CSSProperties;\r\n  status?: string;\r\n  onComplete?: () => void;\r\n}\r\n\r\ninterface MintCountdownRender {\r\n  days: number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n  completed: boolean;\r\n}\r\n\r\nexport const MintCountdown: React.FC<MintCountdownProps> = ({\r\n  date,\r\n  status,\r\n  style,\r\n  onComplete,\r\n}) => {\r\n  const matchesXS = useMediaQuery(\"(max-width:750px)\");\r\n  const matchesXXS = useMediaQuery(\"(max-width:450px)\");\r\n  const classes = useStyles();\r\n  const renderCountdown = ({\r\n    days,\r\n    hours,\r\n    minutes,\r\n    seconds,\r\n    completed,\r\n  }: MintCountdownRender) => {\r\n    hours += days * 24;\r\n    if (completed) {\r\n      return status ? (\r\n        <span\r\n          className={classes.done}\r\n          style={\r\n            matchesXXS\r\n              ? { fontSize: \"24px\", padding: \"4px 10px\" }\r\n              : matchesXS\r\n              ? { fontSize: \"24px\" }\r\n              : {}\r\n          }\r\n        >\r\n          {status}\r\n        </span>\r\n      ) : null;\r\n    } else {\r\n      return (\r\n        <div className={classes.root} style={style}>\r\n          <Paper elevation={0}>\r\n            <span\r\n              className={classes.item}\r\n              style={matchesXS ? { fontSize: \"24px\" } : {}}\r\n            >\r\n              {hours < 10 ? `0${hours}` : hours}\r\n            </span>\r\n            <span>hrs</span>\r\n          </Paper>\r\n          <Paper elevation={0} style={matchesXS ? { fontSize: \"24px\" } : {}}>\r\n            <span className={classes.item}>\r\n              {minutes < 10 ? `0${minutes}` : minutes}\r\n            </span>\r\n            <span>mins</span>\r\n          </Paper>\r\n          <Paper elevation={0} style={matchesXS ? { fontSize: \"24px\" } : {}}>\r\n            <span className={classes.item}>\r\n              {seconds < 10 ? `0${seconds}` : seconds}\r\n            </span>\r\n            <span>secs</span>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (date) {\r\n    return (\r\n      <Countdown\r\n        date={date}\r\n        onComplete={onComplete}\r\n        renderer={renderCountdown}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { CandyMachineAccount } from \"../services/candy-machine\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { GatewayStatus, useGateway } from \"@civic/solana-gateway-react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\r\nimport {\r\n  findGatewayToken,\r\n  getGatewayTokenAddressForOwnerAndGatekeeperNetwork,\r\n  onGatewayTokenChange,\r\n  removeAccountChangeListener,\r\n} from \"@identity.com/solana-gateway-ts\";\r\n\r\nexport const CTAButton = styled(Button)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: url(\"/assets/image/redbtn-back.png\");\r\n  background-size: 100% 60px;\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  box-shadow: none;\r\n  background-color: transparent !important;\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: none;\r\n  }\r\n`; // add your own styles here\r\n\r\nexport const MintButton = ({\r\n  onMint,\r\n  candyMachine,\r\n  isMinting,\r\n  setIsMinting,\r\n  isActive,\r\n}: {\r\n  onMint: () => Promise<void>;\r\n  candyMachine?: CandyMachineAccount;\r\n  isMinting: boolean;\r\n  setIsMinting: (val: boolean) => void;\r\n  isActive: boolean;\r\n}) => {\r\n  const wallet = useWallet();\r\n  const connection = useConnection();\r\n  const [verified, setVerified] = useState(false);\r\n  const { requestGatewayToken, gatewayStatus } = useGateway();\r\n  const [webSocketSubscriptionId, setWebSocketSubscriptionId] = useState(-1);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const getMintButtonContent = () => {\r\n    if (candyMachine?.state.isSoldOut) {\r\n      return \"SOLD OUT\";\r\n    } else if (isMinting) {\r\n      return <CircularProgress />;\r\n    } else if (\r\n      candyMachine?.state.isPresale ||\r\n      candyMachine?.state.isWhitelistOnly\r\n    ) {\r\n      return \"WHITELIST MINT\";\r\n    }\r\n\r\n    return \"MINT\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    const mint = async () => {\r\n      await removeAccountChangeListener(\r\n        connection.connection,\r\n        webSocketSubscriptionId\r\n      );\r\n      await onMint();\r\n\r\n      setClicked(false);\r\n      setVerified(false);\r\n    };\r\n    if (verified && clicked) {\r\n      mint();\r\n    }\r\n  }, [\r\n    verified,\r\n    clicked,\r\n    connection.connection,\r\n    onMint,\r\n    webSocketSubscriptionId,\r\n  ]);\r\n\r\n  const previousGatewayStatus = usePrevious(gatewayStatus);\r\n  useEffect(() => {\r\n    const fromStates = [\r\n      GatewayStatus.NOT_REQUESTED,\r\n      GatewayStatus.REFRESH_TOKEN_REQUIRED,\r\n    ];\r\n    const invalidToStates = [...fromStates, GatewayStatus.UNKNOWN];\r\n    if (\r\n      fromStates.find((state) => previousGatewayStatus === state) &&\r\n      !invalidToStates.find((state) => gatewayStatus === state)\r\n    ) {\r\n      setIsMinting(true);\r\n    }\r\n    console.log(\"change: \", gatewayStatus);\r\n  }, [setIsMinting, previousGatewayStatus, gatewayStatus]);\r\n\r\n  return (\r\n    <CTAButton\r\n      disabled={isMinting || !isActive}\r\n      onClick={async () => {\r\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\r\n          const network =\r\n            candyMachine.state.gatekeeper.gatekeeperNetwork.toBase58();\r\n          if (network === \"ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6\") {\r\n            if (gatewayStatus === GatewayStatus.ACTIVE) {\r\n              await onMint();\r\n            } else {\r\n              // setIsMinting(true);\r\n              await requestGatewayToken();\r\n              console.log(\"after: \", gatewayStatus);\r\n            }\r\n          } else if (\r\n            network === \"ttib7tuX8PTWPqFsmUFQTj78MbRhUmqxidJRDv4hRRE\" ||\r\n            network === \"tibePmPaoTgrs929rWpu755EXaxC7M3SthVCf6GzjZt\"\r\n          ) {\r\n            setClicked(true);\r\n            const gatewayToken = await findGatewayToken(\r\n              connection.connection,\r\n              wallet.publicKey!,\r\n              candyMachine.state.gatekeeper.gatekeeperNetwork\r\n            );\r\n\r\n            if (gatewayToken?.isValid()) {\r\n              await onMint();\r\n            } else {\r\n              window.open(\r\n                `https://verify.encore.fans/?gkNetwork=${network}`,\r\n                \"_blank\"\r\n              );\r\n\r\n              const gatewayTokenAddress =\r\n                await getGatewayTokenAddressForOwnerAndGatekeeperNetwork(\r\n                  wallet.publicKey!,\r\n                  candyMachine.state.gatekeeper.gatekeeperNetwork\r\n                );\r\n\r\n              setWebSocketSubscriptionId(\r\n                onGatewayTokenChange(\r\n                  connection.connection,\r\n                  gatewayTokenAddress,\r\n                  () => setVerified(true),\r\n                  \"confirmed\"\r\n                )\r\n              );\r\n            }\r\n          } else {\r\n            setClicked(false);\r\n            throw new Error(`Unknown Gatekeeper Network: ${network}`);\r\n          }\r\n        } else {\r\n          await onMint();\r\n          setClicked(false);\r\n        }\r\n      }}\r\n      variant=\"contained\"\r\n    >\r\n      {getMintButtonContent()}\r\n    </CTAButton>\r\n  );\r\n};\r\n\r\nfunction usePrevious<T>(value: T): T | undefined {\r\n  const ref = useRef<T>();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { AnimationOnScroll } from \"react-animation-on-scroll\";\r\nimport { useState } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//animation frames\r\nconst BottomJumpKeyFrame = (lower: number, high: number) => keyframes`\r\n0%   { bottom: ${lower}px; }\r\n100% { bottom: ${high}px; }\r\n`;\r\n\r\nconst TopJumpKeyFrame = (lower: number, high: number) => keyframes`\r\n0%   { top: ${high}px; }\r\n100% { top: ${lower}px; }\r\n`;\r\n\r\nconst BorderKeyFrame = (length: number, width: number) => keyframes`\r\n  0% {clip: rect(0px, 0px, 800px, -${length}px); }\r\n  100% {clip: rect(0px, ${width + length}px, 800px, ${width}px); }\r\n`;\r\n\r\nconst ShadowKeyFrame = keyframes`\r\n  0% { box-shadow: 0px 0px 0px 0px red; }\r\n  100% { box-shadow: 0px 0px 80px 12px red; }\r\n`;\r\n\r\nconst FlyKeyFrame = keyframes`\r\n  0% {transform: matrix(0.43, 0.81, -1.09, 0.19, 0, 0);}\r\n  100% {transform: matrix(0.43, 0.81, -1.09, 0.29, 0, 0);}\r\n`;\r\n\r\nconst BackManKeyFrame = keyframes`\r\n  0% {bottom: -100px; opacity: 0.3; }\r\n  10% {bottom: -100px; opacity: 0.8; }\r\n  20% {bottom: -100px; opacity: 0.3; }\r\n  30% {bottom: -100px; opacity: 0.8; }\r\n  50% {bottom: -150px; opacity: 0.8; }\r\n  60% {bottom: -120px; opacity: 0.8; }\r\n  70% {bottom: -150px; opacity: 0.8; }\r\n  80% {bottom: -120px; opacity: 0.8; }\r\n  90% {bottom: -150px; opacity: 0.8; }\r\n  100% {bottom: -150px; opacity: 0.1; }\r\n`;\r\n\r\nconst CarouselKeyFrame = keyframes`\r\n  0% {margin-left: 0px}\r\n  100% {margin-left: -1500px}\r\n`;\r\n\r\nconst BackLetterKeyFrame = keyframes`\r\n  0% {margin-left: -50px}\r\n  100% {margin-left: -200%}\r\n`;\r\n\r\nconst RoadmapKeyFrame = (width: number, height: number) => keyframes`\r\n  0% {clip: rect(0px, ${width}px, 0px, 0px)}\r\n  100% {clip: rect(0px, ${width}px, ${height}px, 0px)}\r\n`;\r\n\r\nconst JumpManKeyFrame = (height: number) => keyframes`\r\n  0% {transform: translate(0px, ${-height / 2}px)}\r\n  100% {transform: translate(0px, ${height / 2}px)}\r\n`;\r\n\r\n// components\r\nconst HomeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: url(\"/assets/image/home-back1.png\");\r\n  background-size: 100% 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-top: 150px;\r\n  padding-bottom: 100px;\r\n  box-sizing: border-box;\r\n  @media only screen and (max-width: 900px) {\r\n    height: 800px;\r\n    background-size: 100% 800px;\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    height: 1000px;\r\n    background-size: 100% 1000px;\r\n  }\r\n`;\r\n\r\nconst TitlePart = styled.div`\r\n  width: 50%;\r\n  margin: 0px;\r\n  margin-left: 200px;\r\n  margin-bottom: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  flex-grow: 1;\r\n\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n\r\n  color: #ffffff;\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n\r\n    text-transform: uppercase;\r\n    margin: 0px;\r\n  }\r\n  h1 {\r\n    font-size: 60px;\r\n    line-height: 68px;\r\n    letter-spacing: 2px;\r\n    margin: 10px 0px;\r\n  }\r\n  p {\r\n    font-weight: 300;\r\n    font-size: 12px;\r\n    line-height: 26px;\r\n    letter-spacing: 1px;\r\n    text-transform: capitalize;\r\n    margin: 0px;\r\n  }\r\n  @media only screen and (max-width: 1366px) {\r\n    margin-left: 170px;\r\n    h5 {\r\n      font-size: 16px;\r\n    }\r\n    h1 {\r\n      font-size: 40px;\r\n      line-height: 48px;\r\n    }\r\n    p {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1100px) {\r\n    margin-left: 130px;\r\n  }\r\n\r\n  @media only screen and (max-width: 970px) {\r\n    margin-left: 110px;\r\n    h5 {\r\n      font-size: 16px;\r\n    }\r\n    h1 {\r\n      font-size: 36px;\r\n      line-height: 44px;\r\n    }\r\n    p {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 900px) {\r\n    width: 70%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    align-items: center;\r\n    text-align: center;\r\n    margin-bottom: 230px;\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    margin-bottom: 300px;\r\n  }\r\n\r\n  @media only screen and (max-width: 420px) {\r\n    h5 {\r\n      font-size: 12px;\r\n    }\r\n    h1 {\r\n      font-size: 28px;\r\n      line-height: 44px;\r\n    }\r\n    p {\r\n      font-size: 8px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ConnectButton = styled.div`\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  padding: 20px 50px;\r\n  background: url(\"/assets/image/redbtn-back.png\");\r\n  background-size: 100% 65px;\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  box-shadow: none;\r\n  &:hover {\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst RedSpane = styled.span`\r\n  color: red;\r\n`;\r\n\r\nconst HomeMan = styled.img`\r\n  position: absolute;\r\n  width: 400px;\r\n  right: 95px;\r\n  animation: ${BottomJumpKeyFrame(10, 40)} 1s ease-in-out infinite alternate;\r\n\r\n  @media only screen and (max-width: 1366px) {\r\n    width: 350px;\r\n    right: 80px;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    width: 300px;\r\n    right: 70px;\r\n  }\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    animation: ${BottomJumpKeyFrame(-180, -150)} 1s ease-in-out infinite\r\n      alternate;\r\n  }\r\n  @media only screen and (max-width: 500px) {\r\n    animation: ${BottomJumpKeyFrame(-330, -300)} 1s ease-in-out infinite\r\n      alternate;\r\n  }\r\n  @media only screen and (max-width: 380px) {\r\n    width: 80%;\r\n    left: 50%;\r\n    transform: translate(-50%, 0px);\r\n  }\r\n`;\r\n\r\nconst AboutContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  text-align: center;\r\n  color: white;\r\n  padding: 40px 0px;\r\n  position: relative;\r\n  background-color: transparent;\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n\r\n    text-transform: uppercase;\r\n    margin: 0px;\r\n  }\r\n  h1 {\r\n    font-size: 60px;\r\n    line-height: 68px;\r\n    letter-spacing: 2px;\r\n    margin: 10px 0px;\r\n  }\r\n  p {\r\n    font-weight: 300;\r\n    font-size: 12px;\r\n    line-height: 26px;\r\n    letter-spacing: 1px;\r\n    text-transform: capitalize;\r\n    margin: 0px;\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nconst BB = styled.div`\r\n  position: absolute;\r\n  box-sizing: border-box;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  background: transparent;\r\n  color: rgba(white, 0.7);\r\n  box-shadow: inset 0 0 0 1px rgba(white, 0.5);\r\n\r\n  &::after {\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    content: \"\";\r\n    margin: -2px;\r\n    box-shadow: inset 0 0 0 2px;\r\n    animation: ${BorderKeyFrame(100, 900)} 2s ease-in-out infinite alternate;\r\n    border-radius: 150px;\r\n  }\r\n`;\r\n\r\nconst AboutBox = styled.div`\r\n  box-sizing: border-box;\r\n  margin: 100px auto;\r\n  width: 850px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  border-radius: 150px;\r\n  padding: 40px 100px 40px 300px;\r\n  border: 1px solid #ff3838;\r\n  position: relative;\r\n  background-color: transparent;\r\n  animation: ${ShadowKeyFrame} 2s ease-in-out infinite alternate;\r\n\r\n  h4 {\r\n    font-size: 24px;\r\n    line-height: 40px;\r\n    letter-spacing: 1px;\r\n    text-transform: uppercase;\r\n\r\n    color: #ff3232;\r\n    margin: 0px;\r\n  }\r\n  p {\r\n    font-weight: 300;\r\n    font-size: 12px;\r\n    line-height: 20px;\r\n    /* or 153% */\r\n\r\n    letter-spacing: 1px;\r\n    text-transform: capitalize;\r\n    text-align: left;\r\n    width: 100%;\r\n    margin: 0px;\r\n  }\r\n  @media only screen and (max-width: 900px) {\r\n    padding: 200px 100px 40px 100px;\r\n    align-items: center;\r\n    width: 90%;\r\n    margin-top: 200px;\r\n    h4,\r\n    p {\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 530px) {\r\n    padding-left: 50px;\r\n    padding-right: 50px;\r\n  }\r\n\r\n  @media only screen and (max-width: 320px) {\r\n    padding-top: 100px;\r\n  }\r\n`;\r\n\r\nconst FlyPane = styled.div`\r\n  box-sizing: border-box;\r\n\r\n  position: absolute;\r\n  width: 320px;\r\n  height: 230px;\r\n  bottom: 20px;\r\n  left: -60px;\r\n\r\n  background: #d62d3a;\r\n  border-radius: 90px;\r\n  animation: ${FlyKeyFrame} 2s ease-in-out infinite alternate;\r\n  @media only screen and (max-width: 900px) {\r\n    top: -100px;\r\n    left: 20%;\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    left: 10%;\r\n  }\r\n  @media only screen and (max-width: 420px) {\r\n    left: 0px;\r\n    width: 70vw;\r\n    height: 50vw;\r\n  }\r\n`;\r\n\r\nconst AboutUsMan = styled.img`\r\n  position: absolute;\r\n  width: 350px;\r\n  left: -40px;\r\n  animation: ${BottomJumpKeyFrame(17, 50)} 2s ease-in-out infinite alternate;\r\n  @media only screen and (max-width: 900px) {\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    animation: ${TopJumpKeyFrame(-70, -40)} 2s ease-in-out infinite alternate;\r\n  }\r\n  @media only screen and (max-width: 420px) {\r\n    width: 80vw;\r\n  }\r\n`;\r\n\r\nconst BackMan1 = styled.img`\r\n  width: 300px;\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translate(-50%, 0px);\r\n  animation: ${BackManKeyFrame} 5s linear infinite;\r\n  z-index: 0;\r\n  @media only screen and (max-width: 380px) {\r\n    width: 240px;\r\n  }\r\n`;\r\n\r\nconst TrendingContainer = styled.div`\r\n  width: 100%;\r\n  background-color: transparent;\r\n  background-image: url(\"/assets/image/home-back2.png\");\r\n  background-size: 100% 100%;\r\n  z-index: 3;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: white;\r\n  padding-top: 250px;\r\n\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n\r\n    text-transform: uppercase;\r\n    margin: 0px;\r\n  }\r\n  h1 {\r\n    font-size: 60px;\r\n    line-height: 68px;\r\n    letter-spacing: 2px;\r\n    margin: 10px 0px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n  }\r\n  p {\r\n    font-weight: 300;\r\n    font-size: 12px;\r\n    line-height: 26px;\r\n    letter-spacing: 1px;\r\n    text-transform: capitalize;\r\n    margin: 0px;\r\n    width: 40%;\r\n    text-align: center;\r\n  }\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    h1 {\r\n      font-size: 48px;\r\n      line-height: 52px;\r\n    }\r\n    p {\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 520px) {\r\n    h1 {\r\n      font-size: 44px;\r\n      line-height: 48px;\r\n    }\r\n    p {\r\n      width: 90%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 420px) {\r\n    h1 {\r\n      font-size: 40px;\r\n      line-height: 44px;\r\n    }\r\n    p {\r\n      width: 90%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CarouselItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n\r\n  img {\r\n    width: 150px;\r\n    height: 150px;\r\n    padding: 20px 10px;\r\n    border-radius: 300px;\r\n    background-color: white;\r\n    box-shadow: 0px 20px black;\r\n    margin-bottom: 30px;\r\n    position: relative;\r\n  }\r\n  h4 {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n\r\n    text-transform: uppercase;\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nconst CarouselView = styled.div`\r\n  width: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 50px 0px;\r\n`;\r\n\r\nconst CarouselPane = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  animation: ${CarouselKeyFrame} 2s ease-in-out infinite alternate;\r\n\r\n  & > * {\r\n    margin-right: 50px;\r\n  }\r\n`;\r\n\r\nconst RoadmapContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: white;\r\n  text-align: center;\r\n  padding-top: 200px;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n\r\n    text-transform: uppercase;\r\n    margin: 0px;\r\n  }\r\n  h1 {\r\n    font-size: 60px;\r\n    line-height: 68px;\r\n    letter-spacing: 2px;\r\n    margin: 10px 0px;\r\n    text-transform: uppercase;\r\n  }\r\n  p {\r\n    font-weight: 300;\r\n    font-size: 12px;\r\n    line-height: 26px;\r\n    letter-spacing: 1px;\r\n    text-transform: capitalize;\r\n    margin: 0px;\r\n    width: 60%;\r\n    text-align: center;\r\n  }\r\n\r\n  @media only screen and (max-width: 520px) {\r\n    h1 {\r\n      font-size: 44px;\r\n      line-height: 48px;\r\n    }\r\n    p {\r\n      width: 90%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Roadmap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 100px 0px 150px 0px;\r\n  box-sizing: border-box;\r\n  width: 80%;\r\n  height: 1500px;\r\n  background: url(\"/assets/image/roadmap-line-gray.png\");\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  margin-top: 50px;\r\n  position: relative;\r\n  @media only screen and (max-width: 1366px) {\r\n    width: 90%;\r\n  }\r\n  @media only screen and (max-width: 900px) {\r\n    background-image: none;\r\n    padding-top: 0px;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst RoadmapBackLine = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 0px;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  background-image: url(\"/assets/image/roadmap-line.png\");\r\n  background-size: 100% 1500px;\r\n  background-repeat: no-repeat;\r\n  animation: ${RoadmapKeyFrame(2000, 1500)} 20s ease-in-out;\r\n  z-index: 0;\r\n  @media only screen and (max-width: 900px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\ninterface RoadmapItemProps {\r\n  float: string;\r\n  margin: number;\r\n  trans: number;\r\n}\r\n\r\nconst RoadmapItem = styled.div<RoadmapItemProps>`\r\n  width: ${(props: RoadmapItemProps) => `calc(100% - ${props.margin}%)`};\r\n  display: flex;\r\n  flex-direction: ${(props: RoadmapItemProps) =>\r\n    props.float === \"left\" ? \"row\" : \"row-reverse\"};\r\n  align-items: center;\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  color: white;\r\n  z-index: 1;\r\n\r\n  margin-left: ${(props: RoadmapItemProps) =>\r\n    props.float === \"left\" ? `${props.margin}%` : \"auto\"};\r\n  margin-right: ${(props: RoadmapItemProps) =>\r\n    props.float === \"right\" ? `${props.margin}%` : \"auto\"};\r\n  transform: ${(props: RoadmapItemProps) => `translate(0px, ${props.trans}px)`};\r\n\r\n  position: relative;\r\n\r\n  h1 {\r\n    font-weight: 400;\r\n    font-size: 110px;\r\n    line-height: 88px;\r\n    /* identical to box height, or 80% */\r\n\r\n    letter-spacing: 1px;\r\n    text-transform: uppercase;\r\n    margin: 20px 40px;\r\n  }\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: ${(props: RoadmapItemProps) =>\r\n      props.float === \"left\" ? \"flex-start\" : \"flex-end\"};\r\n\r\n    h4 {\r\n      font-weight: 400;\r\n      font-size: 30px;\r\n      line-height: 162.3%;\r\n\r\n      text-align: right;\r\n      letter-spacing: 0.03em;\r\n      text-transform: capitalize;\r\n      margin: 10px 0px;\r\n    }\r\n    p {\r\n      font-weight: 300;\r\n      font-size: 17px;\r\n      line-height: 26px;\r\n\r\n      text-align: ${(props: RoadmapItemProps) =>\r\n        props.float === \"left\" ? \"left\" : \"right\"};\r\n      letter-spacing: 1px;\r\n      text-transform: capitalize;\r\n      width: auto;\r\n    }\r\n  }\r\n\r\n  &::before {\r\n    position: absolute;\r\n    transform: ${(props: RoadmapItemProps) =>\r\n      props.float === \"left\" ? \"translate(-50%, 0px)\" : \"translate(50%, 0px)\"};\r\n    content: ${(props: RoadmapItemProps) =>\r\n      props.float === \"left\"\r\n        ? 'url(\"/assets/image/location-left.png\")'\r\n        : 'url(\"/assets/image/location-right.png\")'};\r\n    left: ${(props: RoadmapItemProps) =>\r\n      props.float === \"left\" ? \"0px\" : \"auto\"};\r\n    right: ${(props: RoadmapItemProps) =>\r\n      props.float === \"right\" ? \"0px\" : \"auto\"};\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    div {\r\n      h4 {\r\n        margin-top: 0px;\r\n      }\r\n      p {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    width: 80%;\r\n    margin: 30px auto;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    div {\r\n      align-items: center;\r\n      h4 {\r\n        text-align: center;\r\n      }\r\n      p {\r\n        text-align: center;\r\n      }\r\n    }\r\n    &::before {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackMan2 = styled.img`\r\n  width: 300px;\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translate(-50%, 0px);\r\n  top: 10px;\r\n  z-index: 0;\r\n  @media only screen and (max-width: 380px) {\r\n    width: 240px;\r\n  }\r\n`;\r\n\r\nconst BackLetterView = styled.div`\r\n  width: 150%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50px) rotate(-30deg);\r\n  overflow: hidden;\r\n  z-index: 0;\r\n`;\r\n\r\nconst BackLetterPane = styled.div`\r\n  width: 1000%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  text-overflow: hidden;\r\n  animation: ${BackLetterKeyFrame} 2s ease-in-out infinite alternate;\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  font-weight: 900;\r\n  font-size: 460px;\r\n  line-height: 500px;\r\n  /* identical to box height, or 19% */\r\n\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  color: gray;\r\n\r\n  opacity: 0.21;\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    font-size: 260px;\r\n    line-height: 300px;\r\n  }\r\n`;\r\n\r\nconst FAQContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: white;\r\n  text-align: center;\r\n  background-image: url(\"/assets/image/home-back3.png\");\r\n  background-repeat: no-repeat;\r\n  background-color: transparent;\r\n  background-size: 100% 100%;\r\n  padding: 100px 0px;\r\n\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n\r\n    text-transform: uppercase;\r\n    margin: 0px;\r\n  }\r\n  h1 {\r\n    font-size: 60px;\r\n    line-height: 68px;\r\n    letter-spacing: 2px;\r\n    margin: 10px 0px;\r\n    text-transform: uppercase;\r\n  }\r\n  p {\r\n    font-weight: 300;\r\n    font-size: 12px;\r\n    line-height: 26px;\r\n    letter-spacing: 1px;\r\n    text-transform: capitalize;\r\n    margin: 0px;\r\n    width: 60%;\r\n    text-align: center;\r\n  }\r\n\r\n  @media only screen and (max-width: 520px) {\r\n    h1 {\r\n      font-size: 44px;\r\n      line-height: 48px;\r\n    }\r\n    p {\r\n      width: 90%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FAQList = styled.div`\r\n  width: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n  * {\r\n    margin-top: 30px;\r\n  }\r\n  &:first {\r\n    margin-top: 0px;\r\n  }\r\n`;\r\n\r\nconst ClosedFAQ = styled.div`\r\n  width: 100%;\r\n  background: #141414;\r\n  border-radius: 18px;\r\n  padding: 20px 50px;\r\n  box-sizing: border-box;\r\n\r\n  h3 {\r\n    font-family: \"Londrina Solid\";\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 32px;\r\n    line-height: 32px;\r\n    /* identical to box height */\r\n\r\n    letter-spacing: 0.03em;\r\n    text-transform: capitalize;\r\n\r\n    color: #ffffff;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    h3 {\r\n      font-size: 28px;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 420px) {\r\n    padding: 20px;\r\n    h3 {\r\n      font-size: 20px;\r\n      margin: 10px 0px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst OpenedFAQ = styled.div`\r\n  width: 100%;\r\n  background: linear-gradient(126.97deg, #a22739 6.32%, #ff323c 168.75%);\r\n  mix-blend-mode: normal;\r\n  box-shadow: 0px 40px 100px rgba(225, 37, 37, 0.3);\r\n  border-radius: 18px;\r\n  padding: 50px;\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n\r\n  h3 {\r\n    font-weight: 400;\r\n    font-size: 36px;\r\n    line-height: 43px;\r\n    /* identical to box height */\r\n\r\n    letter-spacing: 0.03em;\r\n    text-transform: capitalize;\r\n    margin-top: 0px;\r\n  }\r\n  p {\r\n    font-weight: 300;\r\n    font-size: 17px;\r\n    line-height: 26px;\r\n    /* or 153% */\r\n\r\n    letter-spacing: 1px;\r\n    text-transform: uppercase;\r\n    text-align: start;\r\n\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media only screen and (max-width: 1100px) {\r\n    h3 {\r\n      font-size: 28px;\r\n    }\r\n    p {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 420px) {\r\n    padding: 20px;\r\n    h3 {\r\n      font-size: 20px;\r\n    }\r\n    p {\r\n      font-size: 8px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BB1 = styled.div`\r\n  position: absolute;\r\n  box-sizing: border-box;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  background: transparent;\r\n  color: rgba(white, 0.7);\r\n  box-shadow: inset 0 0 0 1px rgba(white, 0.5);\r\n\r\n  &::after {\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0px;\r\n    right: 0;\r\n    content: \"\";\r\n    margin: -2px;\r\n    box-shadow: inset 0 0 0 2px;\r\n    animation: ${BorderKeyFrame(100, 1300)} 2s ease-in-out infinite alternate;\r\n    border-radius: 18px;\r\n  }\r\n`;\r\n\r\nconst TeamContainer = styled.div`\r\n  width: 100%;\r\n  height: 150vh;\r\n  background: #1b1b1b url(\"/assets/image/contact-back.png\");\r\n  background-size: 100% 150vh;\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  box-sizing: border-box;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  justify-content: space-around;\r\n  padding: 200px 0px;\r\n\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n\r\n    text-transform: uppercase;\r\n    margin: 0px;\r\n  }\r\n  h1 {\r\n    font-size: 60px;\r\n    line-height: 68px;\r\n    letter-spacing: 2px;\r\n    margin: 10px 0px;\r\n    text-transform: uppercase;\r\n  }\r\n  @media only screen and (max-width: 900px) {\r\n    height: auto;\r\n    background-size: 100% 100%;\r\n    padding-bottom: 0px;\r\n  }\r\n  @media only screen and (max-width: 520px) {\r\n    h1 {\r\n      font-size: 44px;\r\n      line-height: 48px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MemberContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 100px 0px;\r\n\r\n  * {\r\n    margin: 10px;\r\n  }\r\n\r\n  &:nth-child(2n) {\r\n    animation-delay: 1s;\r\n  }\r\n  @media only screen and (max-width: 900px) {\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nconst TeamMember = styled.div`\r\n  width: 250px;\r\n  height: 350px;\r\n  background-color: transparent;\r\n  background-image: url(\"assets/image/member-back.png\");\r\n  background-size: 250px 350px;\r\n  position: relative;\r\n  animation: ${JumpManKeyFrame(50)} 2s ease-in-out infinite alternate;\r\n\r\n  img {\r\n    position: absolute;\r\n    width: 200px;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-55%, -60%);\r\n  }\r\n\r\n  h4 {\r\n    position: absolute;\r\n    bottom: 0px;\r\n    left: 20px;\r\n    font-family: \"Londrina Solid\";\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 22.3885px;\r\n    line-height: 162.3%;\r\n    letter-spacing: 0.03em;\r\n    text-transform: capitalize;\r\n    margin: 8px 0px;\r\n\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst RoadmapData = [\r\n  {\r\n    title: \"$DSKT\",\r\n    description:\r\n      \"Official utility token that provides a way to access our product line, including Shop, internal services, discounts on secondary NFT collections, in-game decisions, the DAO vote，and holder access to high-end perks. Most of these utilities will have combustion mechanisms to reduce total supply.\",\r\n    float: \"left\",\r\n    margin: 1,\r\n    trans: 0,\r\n  },\r\n  {\r\n    title: \"Staking\",\r\n    description:\r\n      \"Put your dokesi in a float tank and you decide how long - you can unstake at any given time and get the rewards you get. Staking 1 dokesi will generate 10 $DKST per day, If you staking 3 dokesi, each dokesi will give you an extra x1.25 $DKST!\",\r\n    float: \"left\",\r\n    margin: 27,\r\n    trans: -25,\r\n  },\r\n  {\r\n    title: \"Farms\",\r\n    description:\r\n      \"Send your dokesi to the farm to work for you. The higher the work intensity, the more $DKST rewards, and you can get up to X2 $DKST.\",\r\n    float: \"right\",\r\n    margin: 22.5,\r\n    trans: -40,\r\n  },\r\n  {\r\n    title: \"DAO\",\r\n    description:\r\n      \"Establish the DokesiDAO for all holders Exclusive DAO channels, alpha, collaborations, and giveaways Setup & fund DokesiDAO treasury.\",\r\n    float: \"left\",\r\n    margin: 29,\r\n    trans: -20,\r\n  },\r\n  {\r\n    title: \"Evolution\",\r\n    description:\r\n      \"Dokesi accidentally got the gene potion. Some Dokesi was promoted to advanced species, and then many stories happened. Part of the series will be presented through $DKST mint, and perhaps some will be presented by burning NFT.\",\r\n    float: \"right\",\r\n    margin: 14.5,\r\n    trans: -10,\r\n  },\r\n  {\r\n    title: \"House\",\r\n    description:\r\n      \"Every Dokesi in the future meta-universe needs a house and maybe a pet. to be continued\",\r\n    float: \"left\",\r\n    margin: 17.5,\r\n    trans: 0,\r\n  },\r\n];\r\n\r\nconst FaqData = [\r\n  {\r\n    question: \"Who are the Dokesi？\",\r\n    answer:\r\n      \"Dokesi is a PFP inspired by short film animation, with rich and unique rare features, dozens of rare avatars, costumes, and color schemes. We started with PFP, and the world of Dokesi continues to expand.\",\r\n  },\r\n  {\r\n    question: \"How many Dokesi are there?\",\r\n    answer:\r\n      \"Our genesis collection consists of 2000 unique 1/1 characters who live on the Solana Blockchain. They are all hand-drawn, 100% original, and randomly generated through the script.\",\r\n  },\r\n  {\r\n    question: \"When was the Dokesi mint？\",\r\n    answer: \"Our genesis collection was minted on June 15th, 2022.\",\r\n  },\r\n  {\r\n    question: \"How do I buy NFT?\",\r\n    answer:\r\n      \"All you need are Solana coins, a compatible wallet (Phantom), and our website.\",\r\n  },\r\n  {\r\n    question: \"How do I set up a wallet?\",\r\n    answer:\r\n      \"We recommend using Phantom wallet if you are minting on desktop. For more information about how to set up a Phantom wallet visit: help.phantom.app\",\r\n  },\r\n  {\r\n    question: \"How do I add funds to my wallet?\",\r\n    answer:\r\n      \"To add funds to your wallet you will need to buy the Solana coin (SOL). This can be done on any exchange wallet (Binance, Coinbase,…).<br>Next you will need to go to your account created on Phantom, Solflare, Sollet. Click on ‘Deposit SOL’ and copy your SOL address which will look something like this: …<br>Go over to SOL on your exchange wallet and choose ‘Send SOL’. You can now paste the address and send your SOL to your minting wallet.\",\r\n  },\r\n  {\r\n    question: \"What are the maximum mints per wallet?\",\r\n    answer: \"Three mint per wallet is allowed per allowlist winner.\",\r\n  },\r\n  {\r\n    question: \"How are these 2,000 Dokesi distributed?\",\r\n    answer:\r\n      \"1,900: To the whitelist winner mints 100: Future cooperation, marketing, and sweepstakes\",\r\n  },\r\n];\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const [faqIndex, setFaqIndex] = useState(-1);\r\n  const { ref, inView, entry } = useInView({\r\n    threshold: 0,\r\n  });\r\n\r\n  const clickFaqHandler = (index: number) => {\r\n    if (index === faqIndex) {\r\n      setFaqIndex(-1);\r\n      return;\r\n    }\r\n\r\n    setFaqIndex(index);\r\n  };\r\n\r\n  const goToMint = () => {\r\n    navigate(\"/mint\");\r\n  };\r\n  return (\r\n    <>\r\n      <HomeContainer id=\"home\">\r\n        <TitlePart>\r\n          <h5>Dokesi is a PFP for short film animation.</h5>\r\n          <h1>\r\n            discover best <RedSpane>digital art</RedSpane> and collect nfts\r\n          </h1>\r\n          <p>\r\n            This is a place to share fun anecdotes from life. The more time you\r\n            spend, the more exhilarating the experience will be.\r\n          </p>\r\n          <ConnectButton onClick={goToMint}>\r\n            {/* <BBButton /> */}\r\n            Mint Now\r\n          </ConnectButton>\r\n        </TitlePart>\r\n        <HomeMan src=\"/assets/image/home-man1.png\" />\r\n      </HomeContainer>\r\n      <AboutContainer id=\"about\">\r\n        <h5>\r\n          <RedSpane>About US</RedSpane>\r\n        </h5>\r\n        <h1>About Dokesi.art</h1>\r\n        <p>\r\n          This is a place to share fun anecdotes from life. The more time you\r\n          spend, the more exhilarating the experience will be.\r\n        </p>\r\n        <AboutBox>\r\n          <h4>\r\n            <RedSpane>dokesi.art</RedSpane>\r\n          </h4>\r\n          <p>\r\n            Dokesi is a PFP designed for short film animation. It launches 2,000\r\n            independent digital NFT collections on Solana blockchain, with rich,\r\n            diverse and unique rare features, dozens of rare headshots, costumes\r\n            and color schemes. We started with 2,000 PFP, and the world of\r\n            Dokesi is constantly expanding. The new experience of Dokesi is only\r\n            open to holders. With the expansion of the universe, our brand is\r\n            constantly developing.\r\n          </p>\r\n          <BB />\r\n          <FlyPane />\r\n          <AboutUsMan src=\"/assets/image/home-man2.png\" />\r\n        </AboutBox>\r\n        <BackMan1 src=\"/assets/image/home-back-man1.png\" />\r\n      </AboutContainer>\r\n      <TrendingContainer>\r\n        <h5>About US</h5>\r\n        <h1>\r\n          Treanding <RedSpane>this week</RedSpane>\r\n        </h1>\r\n        <p>\r\n          This is a place to share fun anecdotes from life. The more time you\r\n          spend, the more exhilarating the experience will be.\r\n        </p>\r\n        <CarouselView>\r\n          <CarouselPane>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi0.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi1.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi2.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi3.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi4.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi5.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi6.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi7.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi8.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi9.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi10.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi11.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi0.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi1.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n          </CarouselPane>\r\n          <CarouselPane style={{ animationDelay: \"1s\" }}>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi11.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi10.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi9.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi8.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi7.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi6.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi5.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi4.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi3.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi2.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi1.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi0.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi11.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n            <CarouselItem>\r\n              <img src=\"/assets/dokesis/dokesi10.png\" alt=\"man1\" />\r\n            </CarouselItem>\r\n          </CarouselPane>\r\n        </CarouselView>\r\n      </TrendingContainer>\r\n      <RoadmapContainer id=\"roadmap\">\r\n        <BackMan2 src=\"/assets/image/back-man1.png\" />\r\n        <BackLetterView>\r\n          <BackLetterPane>\r\n            <span>dokesi.art dokesi.art dokesi.art</span>\r\n          </BackLetterPane>\r\n        </BackLetterView>\r\n        <h5>\r\n          <RedSpane>About US</RedSpane>\r\n        </h5>\r\n        <h1>Roadmap</h1>\r\n        <p>\r\n          Now has come to the most critical moment, the dokesi waits for the\r\n          salvation of mankind, bringing them to the land of freedom, which will\r\n          not come without cost. What we offer you, however, is a seamless way\r\n          to save them, and every purchase is the least you can do for the\r\n          defenders of humanity.\r\n        </p>\r\n        <Roadmap ref={ref}>\r\n          <RoadmapBackLine\r\n            style={\r\n              inView\r\n                ? { animationPlayState: \"running\" }\r\n                : { animationPlayState: \"paused\" }\r\n            }\r\n          />\r\n          {RoadmapData.map((data: any, index: number) => (\r\n            <AnimationOnScroll\r\n              animateIn=\"fadeInDownBig\"\r\n              animateOnce\r\n              key={index}\r\n            >\r\n              <RoadmapItem\r\n                float={data.float}\r\n                margin={data.margin}\r\n                trans={data.trans}\r\n                className=\"item\"\r\n              >\r\n                <h1>0{index + 1}</h1>\r\n                <div>\r\n                  <h4>{data.title}</h4>\r\n                  <p>{data.description}</p>\r\n                </div>\r\n              </RoadmapItem>\r\n            </AnimationOnScroll>\r\n          ))}\r\n        </Roadmap>\r\n      </RoadmapContainer>\r\n      <FAQContainer id=\"faq\">\r\n        <h4>\r\n          <RedSpane>Faq</RedSpane>\r\n        </h4>\r\n        <h1>\r\n          Have any <RedSpane>Question?</RedSpane>\r\n        </h1>\r\n        <p>\r\n          Now has come to the most critical moment, the dokesi waits for the\r\n          salvation of mankind, bringing them to the land of freedom, which will\r\n          not come without cost. What we offer you, however, is a seamless way\r\n          to save them, and every purchase is the least you can do for the\r\n          defenders of humanity.\r\n        </p>\r\n        <FAQList>\r\n          {FaqData.map((data: any, index: number) => {\r\n            return index === faqIndex ? (\r\n              <OpenedFAQ onClick={() => clickFaqHandler(index)} key={index}>\r\n                <h3>{data.question}</h3>\r\n                <p>{data.answer}</p>\r\n                <BB1 />\r\n              </OpenedFAQ>\r\n            ) : (\r\n              <ClosedFAQ onClick={() => clickFaqHandler(index)} key={index}>\r\n                <h3>{data.question}</h3>\r\n              </ClosedFAQ>\r\n            );\r\n          })}\r\n        </FAQList>\r\n      </FAQContainer>\r\n      <TeamContainer id=\"team\">\r\n        <h5>About us</h5>\r\n        <h1>Dokesi.art Team</h1>\r\n        <MemberContainer>\r\n          <TeamMember>\r\n            <img src=\"/assets/dokesis/dokesi6.png\" alt=\"team member\" />\r\n            <h4>Atwood Johnson</h4>\r\n            <h3>Illustrator</h3>\r\n          </TeamMember>\r\n          <TeamMember style={{ animationDelay: \"2s\" }}>\r\n            <img src=\"/assets/dokesis/dokesi5.png\" alt=\"team member\" />\r\n            <h4>Joseph Anderson</h4>\r\n            <h3>Lead Developer</h3>\r\n          </TeamMember>\r\n          <TeamMember>\r\n            <img src=\"/assets/dokesis/dokesi4.png\" alt=\"team member\" />\r\n            <h4>Rhodes Hernández</h4>\r\n            <h3>Front-end Developer</h3>\r\n          </TeamMember>\r\n          <TeamMember style={{ animationDelay: \"2s\" }}>\r\n            <img src=\"/assets/dokesis/dokesi3.png\" alt=\"team member\" />\r\n            <h4>Keanu Davis</h4>\r\n            <h3>Social Media Manager</h3>\r\n          </TeamMember>\r\n        </MemberContainer>\r\n      </TeamContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect, useMemo, useState, useCallback } from \"react\";\r\nimport * as anchor from \"@project-serum/anchor\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { keyframes } from \"styled-components\";\r\nimport { Snackbar, useMediaQuery } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { PublicKey, Transaction } from \"@solana/web3.js\";\r\nimport { useWallet } from \"@solana/wallet-adapter-react\";\r\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\r\nimport {\r\n  awaitTransactionSignatureConfirmation,\r\n  CandyMachineAccount,\r\n  CANDY_MACHINE_PROGRAM,\r\n  getCandyMachineState,\r\n  mintOneToken,\r\n  getCollectionPDA,\r\n  SetupState,\r\n  createAccountsForMint,\r\n} from \"../services/candy-machine\";\r\nimport {\r\n  AlertState,\r\n  toDate,\r\n  formatNumber,\r\n  getAtaForMint,\r\n} from \"../services/utils\";\r\nimport { MintCountdown } from \"../components/MintCountdown\";\r\nimport { MintButton } from \"../components/MintButton\";\r\nimport { GatewayProvider } from \"@civic/solana-gateway-react\";\r\nimport { sendTransaction } from \"../services/connection\";\r\n\r\nconst ConnectButton = styled(WalletDialogButton)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: url(\"/assets/image/redbtn-back.png\");\r\n  background-size: 100% 60px;\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  box-shadow: none;\r\n  &:hover {\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst HeaderBack = styled.div`\r\n  width: 100%;\r\n  height: 104px;\r\n  background: linear-gradient(93.48deg, #a22739 59.76%, #ff323c 174.66%);\r\n  @media only screen and (max-width: 1366px) {\r\n    height: 88px;\r\n  }\r\n  @media only screen and (max-width: 750px) {\r\n    height: 72px;\r\n  }\r\n`;\r\n\r\nconst FirstContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  height: calc(100vh - 104px);\r\n  margin: auto 0px;\r\n  padding: 10vh 0px;\r\n  box-sizing: border-box;\r\n  flex-wrap: wrap;\r\n  @media only screen and (max-width: 1100px) {\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst SingerImg = styled.img`\r\n  width: 40%;\r\n  height: auto;\r\n  @media only screen and (max-width: 1100px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst RightBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  margin-left: 100px;\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n\r\n  h1 {\r\n    color: white;\r\n    font-size: 48px;\r\n    line-height: 100px;\r\n  }\r\n  @media only screen and (max-width: 1100px) {\r\n    width: 70%;\r\n    margin: auto;\r\n    align-items: center;\r\n    h1 {\r\n      text-align: center;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 750px) {\r\n    width: 90%;\r\n    h1 {\r\n      font-size: 36px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 410px) {\r\n    h1 {\r\n      font-size: 32px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst clipMe = (\r\n  width: number,\r\n  height: number,\r\n  borderWidth: number\r\n) => keyframes`\r\n  0%, 100% {clip: rect(0px, ${width}px, ${borderWidth}px, 0px); }\r\n  25% {clip: rect(0px, ${borderWidth}px, ${height}px, 0px); }\r\n  50% {clip: rect(${height - borderWidth}px, ${width}px, ${height}px, 0px); }\r\n  75% {clip: rect(0px, ${width}px, ${height}px, ${width - borderWidth}px); }\r\n`;\r\n\r\nconst BB = styled.div`\r\n  position: absolute;\r\n  box-sizing: border-box;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  background: transparent;\r\n  color: green;\r\n  box-shadow: inset 0 0 0 1px rgba(white, 0.5);\r\n\r\n  &::before,\r\n  &::after {\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    content: \"\";\r\n    margin: -2px;\r\n    box-shadow: inset 0 0 0 2px;\r\n    animation: ${clipMe(607, 285, 2)} 2s linear infinite;\r\n    border-radius: 17px;\r\n  }\r\n\r\n  &::before {\r\n    animation-delay: -1s;\r\n  }\r\n  @media only screen and (max-width: 1365px) {\r\n    &::before,\r\n    &::after {\r\n      animation: ${clipMe(500, 283, 2)} 2s linear infinite;\r\n    }\r\n    &::before {\r\n      animation-delay: -1s;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 570px) {\r\n    &::before,\r\n    &::after {\r\n      animation: ${clipMe(400, 283, 2)} 2s linear infinite;\r\n    }\r\n    &::before {\r\n      animation-delay: -1s;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 450px) {\r\n    &::before,\r\n    &::after {\r\n      animation: ${clipMe(300, 283, 2)} 2s linear infinite;\r\n    }\r\n    &::before {\r\n      animation-delay: -1s;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MintBox = styled.div`\r\n  width: 607px;\r\n  background: #131313;\r\n  border-radius: 17px;\r\n  border: 2px solid;\r\n  border-color: red;\r\n  box-sizing: border-box;\r\n  padding: 20px 35px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  @media only screen and (max-width: 1365px) {\r\n    width: 500px;\r\n  }\r\n  @media only screen and (max-width: 570px) {\r\n    width: 400px;\r\n  }\r\n  @media only screen and (max-width: 450px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst ValueViewPane = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n  padding: 10px 0px;\r\n`;\r\n\r\nconst TextContainder = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst LabelText = styled.label`\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  font-weight: 300;\r\n  font-size: 17px;\r\n  line-height: 26px;\r\n  /* identical to box height, or 153% */\r\n\r\n  letter-spacing: 1px;\r\n  text-transform: capitalize;\r\n\r\n  color: #969696;\r\n  @media only screen and (max-width: 1365px) {\r\n    font-size: 16px;\r\n  }\r\n  @media only screen and (max-width: 620px) {\r\n    font-size: 12px;\r\n  }\r\n  @media only screen and (max-width: 450px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nconst ValueText = styled.label`\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 40px;\r\n  line-height: 47px;\r\n  letter-spacing: 1px;\r\n  text-transform: capitalize;\r\n\r\n  color: #ffffff;\r\n  @media only screen and (max-width: 1365px) {\r\n    font-size: 32px;\r\n  }\r\n  @media only screen and (max-width: 620px) {\r\n    font-size: 24px;\r\n  }\r\n  @media only screen and (max-width: 450px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst VerticalSeparator = styled.div`\r\n  position: relative;\r\n  width: 2px;\r\n  height: 95px;\r\n\r\n  background: radial-gradient(\r\n    50% 50% at 50% 50%,\r\n    #ff3232 0%,\r\n    rgba(255, 50, 50, 0) 94.27%\r\n  );\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst HorizontalSeparator = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 2px;\r\n  margin: 10px 0px;\r\n\r\n  background: radial-gradient(\r\n    50% 50% at 50% 50%,\r\n    #ff3232 0%,\r\n    rgba(255, 50, 50, 0) 94.27%\r\n  );\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst BackgroundImage = styled.img`\r\n  position: absolute;\r\n  width: 300px;\r\n  z-index: 0;\r\n  left: 50%;\r\n  transform: translate(-80%, 0);\r\n  @media only screen and (max-width: 1100px) {\r\n    transform: translate(-50%, 0);\r\n  }\r\n`;\r\n\r\nconst SecondContainer = styled.div`\r\n  width: 100%;\r\n  height: 500px;\r\n  background-image: url(\"/assets/image/contact-back.png\");\r\n  background-size: 100vw 500px;\r\n  display: flex;\r\n  padding: 150px 20px;\r\n  box-sizing: border-box;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  margin-top: 70px;\r\n  @media only screen and (max-width: 1100px) {\r\n    height: 735px;\r\n    background-size: 100vw 735px;\r\n  }\r\n  @media only screen and (max-width: 620px) {\r\n    height: 830px;\r\n    background-size: 100vw 850px;\r\n  }\r\n`;\r\n\r\nconst QueryLabel = styled.div`\r\n  width: 40%;\r\n  margin-right: 50px;\r\n  @media only screen and (max-width: 1100px) {\r\n    width: 70%;\r\n    margin-right: 0px;\r\n  }\r\n  @media only screen and (max-width: 620px) {\r\n    width: 90%;\r\n  }\r\n`;\r\nconst QueryLabelTitle = styled.h1`\r\n  margin: 0px;\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 80px;\r\n  line-height: 88px;\r\n  /* or 110% */\r\n\r\n  letter-spacing: 3px;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  @media only screen and (max-width: 1365px) {\r\n    font-size: 72px;\r\n  }\r\n  @media only screen and (max-width: 620px) {\r\n    font-size: 52px;\r\n  }\r\n  @media only screen and (max-width: 410px) {\r\n    font-size: 36px;\r\n  }\r\n`;\r\n\r\nconst QueryLabelSub = styled.h1`\r\n  margin: 0px;\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  font-weight: 300;\r\n  font-size: 22px;\r\n  line-height: 88px;\r\n  /* identical to box height, or 400% */\r\n\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n\r\n  color: #ffffff;\r\n  @media only screen and (max-width: 420px) {\r\n    font-size: 24px;\r\n  }\r\n  @media only screen and (max-width: 620px) {\r\n    font-size: 16px;\r\n  }\r\n  @media only screen and (max-width: 410px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst QueryForm = styled.form`\r\n  width: 30%;\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  font-size: 13px;\r\n  font-stretch: 100%;\r\n  @media only screen and (max-width: 1100px) {\r\n    width: 70%;\r\n  }\r\n  @media only screen and (max-width: 620px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\ninterface QueryInputProps {\r\n  float: string;\r\n}\r\n\r\nconst QueryInput = styled.input`\r\n  width: calc(50% - 2px);\r\n  float: ${(props: QueryInputProps) => props.float};\r\n  outline-width: 0;\r\n  box-sizing: border-box;\r\n  padding: 20px;\r\n  border: 0px;\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  font-weight: 300;\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n  /* identical to box height */\r\n\r\n  letter-spacing: 1px;\r\n  text-transform: capitalize;\r\n\r\n  color: #ffffff;\r\n  background: rgba(0, 0, 0, 0.24);\r\n  border: 1px solid #ffffff;\r\n  box-shadow: 3px 16px 80px rgba(121, 0, 0, 0.26);\r\n  border-radius: 6.45px;\r\n  @media only screen and (max-width: 620px) {\r\n    width: 100%;\r\n    margin-top: 4px;\r\n  }\r\n`;\r\n\r\nconst QueryText = styled.textarea`\r\n  width: 100%;\r\n  margin-top: 4px;\r\n  box-sizing: border-box;\r\n  padding: 20px;\r\n  height: 150px;\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  font-weight: 300;\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n  /* identical to box height */\r\n\r\n  letter-spacing: 1px;\r\n  text-transform: capitalize;\r\n\r\n  color: #ffffff;\r\n  background: rgba(0, 0, 0, 0.24);\r\n  border: 1px solid #ffffff;\r\n  box-shadow: 3px 16px 80px rgba(121, 0, 0, 0.26);\r\n  border-radius: 6.45px;\r\n  border: \"0px\";\r\n  outline-width: 0;\r\n`;\r\n\r\nconst SendMsgBtn = styled.button`\r\n  font-family: \"Londrina Solid\";\r\n  font-style: normal;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  background: url(\"/assets/image/redbtn-small-back.png\");\r\n  background-size: 100% 56px;\r\n  text-transform: uppercase;\r\n  padding: 20px 35px;\r\n  border: 0px;\r\n  outline-width: 0;\r\n  color: white;\r\n  margin-top: 5px;\r\n  cursor: pointer;\r\n  @media only screen and (max-width: 420px) {\r\n    width: 100%;\r\n    margin-top: 4px;\r\n  }\r\n`;\r\n\r\nconst MintContainer = styled.div``;\r\n\r\nexport interface MintProps {\r\n  candyMachineId?: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  txTimeout: number;\r\n  rpcHost: string;\r\n}\r\n\r\nconst Mint = (props: MintProps) => {\r\n  const [isUserMinting, setIsUserMinting] = useState(false);\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: \"\",\r\n    severity: undefined,\r\n  });\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [endDate, setEndDate] = useState<Date>();\r\n  const [itemsRemaining, setItemsRemaining] = useState<number>();\r\n  const [isWhitelistUser, setIsWhitelistUser] = useState(false);\r\n  const [isPresale, setIsPresale] = useState(false);\r\n  const [discountPrice, setDiscountPrice] = useState<anchor.BN>();\r\n  const [needTxnSplit, setNeedTxnSplit] = useState(true);\r\n  const [setupTxn, setSetupTxn] = useState<SetupState>();\r\n\r\n  const [fullName, setFullName] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [qmessage, setQMessage] = useState<string>(\"\");\r\n\r\n  const rpcUrl = props.rpcHost;\r\n  const wallet = useWallet();\r\n\r\n  const matchesSM = useMediaQuery(\"(max-width:1100px)\");\r\n\r\n  const sendMsg = () => {\r\n    setEmail(\"\");\r\n    setFullName(\"\");\r\n    setQMessage(\"\");\r\n    setAlertState({\r\n      open: true,\r\n      message: `Successfully sended!`,\r\n      severity: \"info\",\r\n      noHide: false,\r\n    });\r\n  };\r\n\r\n  const anchorWallet = useMemo(() => {\r\n    if (\r\n      !wallet ||\r\n      !wallet.publicKey ||\r\n      !wallet.signAllTransactions ||\r\n      !wallet.signTransaction\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      publicKey: wallet.publicKey,\r\n      signAllTransactions: wallet.signAllTransactions,\r\n      signTransaction: wallet.signTransaction,\r\n    } as anchor.Wallet;\r\n  }, [wallet]);\r\n\r\n  const refreshCandyMachineState = useCallback(async () => {\r\n    if (!anchorWallet) {\r\n      return;\r\n    }\r\n\r\n    if (props.candyMachineId) {\r\n      try {\r\n        const cndy = await getCandyMachineState(\r\n          anchorWallet,\r\n          props.candyMachineId,\r\n          props.connection\r\n        );\r\n        let active =\r\n          cndy?.state.goLiveDate?.toNumber() < new Date().getTime() / 1000;\r\n        let presale = false;\r\n        // whitelist mint?\r\n        if (cndy?.state.whitelistMintSettings) {\r\n          // is it a presale mint?\r\n          if (\r\n            cndy.state.whitelistMintSettings.presale &&\r\n            (!cndy.state.goLiveDate ||\r\n              cndy.state.goLiveDate.toNumber() > new Date().getTime() / 1000)\r\n          ) {\r\n            presale = true;\r\n          }\r\n          // is there a discount?\r\n          if (cndy.state.whitelistMintSettings.discountPrice) {\r\n            setDiscountPrice(cndy.state.whitelistMintSettings.discountPrice);\r\n          } else {\r\n            setDiscountPrice(undefined);\r\n            // when presale=false and discountPrice=null, mint is restricted\r\n            // to whitelist users only\r\n            if (!cndy.state.whitelistMintSettings.presale) {\r\n              cndy.state.isWhitelistOnly = true;\r\n            }\r\n          }\r\n          // retrieves the whitelist token\r\n          const mint = new anchor.web3.PublicKey(\r\n            cndy.state.whitelistMintSettings.mint\r\n          );\r\n          const token = (await getAtaForMint(mint, anchorWallet.publicKey))[0];\r\n\r\n          try {\r\n            const balance = await props.connection.getTokenAccountBalance(\r\n              token\r\n            );\r\n            let valid = parseInt(balance.value.amount) > 0;\r\n            // only whitelist the user if the balance > 0\r\n            setIsWhitelistUser(valid);\r\n            active = (presale && valid) || active;\r\n          } catch (e) {\r\n            setIsWhitelistUser(false);\r\n            // no whitelist user, no mint\r\n            if (cndy.state.isWhitelistOnly) {\r\n              active = false;\r\n            }\r\n            console.log(\"There was a problem fetching whitelist token balance\");\r\n            console.log(e);\r\n          }\r\n        }\r\n        // datetime to stop the mint?\r\n        if (cndy?.state.endSettings?.endSettingType.date) {\r\n          setEndDate(toDate(cndy.state.endSettings.number));\r\n          if (\r\n            cndy.state.endSettings.number.toNumber() <\r\n            new Date().getTime() / 1000\r\n          ) {\r\n            active = false;\r\n          }\r\n        }\r\n        // amount to stop the mint?\r\n        if (cndy?.state.endSettings?.endSettingType.amount) {\r\n          let limit = Math.min(\r\n            cndy.state.endSettings.number.toNumber(),\r\n            cndy.state.itemsAvailable\r\n          );\r\n          if (cndy.state.itemsRedeemed < limit) {\r\n            setItemsRemaining(limit - cndy.state.itemsRedeemed);\r\n          } else {\r\n            setItemsRemaining(0);\r\n            cndy.state.isSoldOut = true;\r\n          }\r\n        } else {\r\n          setItemsRemaining(cndy.state.itemsRemaining);\r\n        }\r\n\r\n        if (cndy.state.isSoldOut) {\r\n          active = false;\r\n        }\r\n\r\n        const [collectionPDA] = await getCollectionPDA(props.candyMachineId);\r\n        const collectionPDAAccount =\r\n          await cndy.program.provider.connection.getAccountInfo(collectionPDA);\r\n\r\n        setIsActive((cndy.state.isActive = active));\r\n        setIsPresale((cndy.state.isPresale = presale));\r\n        setCandyMachine(cndy);\r\n\r\n        const txnEstimate =\r\n          892 +\r\n          (!!collectionPDAAccount && cndy.state.retainAuthority ? 182 : 0) +\r\n          (cndy.state.tokenMint ? 177 : 0) +\r\n          (cndy.state.whitelistMintSettings ? 33 : 0) +\r\n          (cndy.state.whitelistMintSettings?.mode?.burnEveryTime ? 145 : 0) +\r\n          (cndy.state.gatekeeper ? 33 : 0) +\r\n          (cndy.state.gatekeeper?.expireOnUse ? 66 : 0);\r\n\r\n        setNeedTxnSplit(txnEstimate > 1230);\r\n      } catch (e) {\r\n        if (e instanceof Error) {\r\n          if (e.message === `Account does not exist ${props.candyMachineId}`) {\r\n            setAlertState({\r\n              open: true,\r\n              message: `Couldn't fetch candy machine state from candy machine with address: ${props.candyMachineId}, using rpc: ${props.rpcHost}! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!`,\r\n              severity: \"error\",\r\n              noHide: true,\r\n            });\r\n          } else if (e.message.startsWith(\"failed to get info about account\")) {\r\n            setAlertState({\r\n              open: true,\r\n              message: `Couldn't fetch candy machine state with rpc: ${props.rpcHost}! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!`,\r\n              severity: \"error\",\r\n              noHide: true,\r\n            });\r\n          }\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: `${e}`,\r\n            severity: \"error\",\r\n            noHide: true,\r\n          });\r\n        }\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      setAlertState({\r\n        open: true,\r\n        message: `Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!`,\r\n        severity: \"error\",\r\n        noHide: true,\r\n      });\r\n    }\r\n  }, [anchorWallet, props.candyMachineId, props.connection, props.rpcHost]);\r\n\r\n  const onMint = async (\r\n    beforeTransactions: Transaction[] = [],\r\n    afterTransactions: Transaction[] = []\r\n  ) => {\r\n    try {\r\n      setIsUserMinting(true);\r\n      document.getElementById(\"#identity\")?.click();\r\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\r\n        let setupMint: SetupState | undefined;\r\n        if (needTxnSplit && setupTxn === undefined) {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Please sign account setup transaction\",\r\n            severity: \"info\",\r\n          });\r\n          setupMint = await createAccountsForMint(\r\n            candyMachine,\r\n            wallet.publicKey\r\n          );\r\n          let status: any = { err: true };\r\n          if (setupMint.transaction) {\r\n            status = await awaitTransactionSignatureConfirmation(\r\n              setupMint.transaction,\r\n              props.txTimeout,\r\n              props.connection,\r\n              true\r\n            );\r\n          }\r\n          if (status && !status.err) {\r\n            setSetupTxn(setupMint);\r\n            setAlertState({\r\n              open: true,\r\n              message:\r\n                \"Setup transaction succeeded! Please sign minting transaction\",\r\n              severity: \"info\",\r\n            });\r\n          } else {\r\n            setAlertState({\r\n              open: true,\r\n              message: \"Mint failed! Please try again!\",\r\n              severity: \"error\",\r\n            });\r\n            setIsUserMinting(false);\r\n            return;\r\n          }\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Please sign minting transaction\",\r\n            severity: \"info\",\r\n          });\r\n        }\r\n\r\n        let mintOne = await mintOneToken(\r\n          candyMachine,\r\n          wallet.publicKey,\r\n          beforeTransactions,\r\n          afterTransactions,\r\n          setupMint ?? setupTxn\r\n        );\r\n        const mintTxId = mintOne[0];\r\n\r\n        let status: any = { err: true };\r\n        if (mintTxId) {\r\n          status = await awaitTransactionSignatureConfirmation(\r\n            mintTxId,\r\n            props.txTimeout,\r\n            props.connection,\r\n            true\r\n          );\r\n        }\r\n\r\n        if (status && !status.err) {\r\n          // manual update since the refresh might not detect\r\n          // the change immediately\r\n          let remaining = itemsRemaining! - 1;\r\n          setItemsRemaining(remaining);\r\n          setIsActive((candyMachine.state.isActive = remaining > 0));\r\n          candyMachine.state.isSoldOut = remaining === 0;\r\n          setSetupTxn(undefined);\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Congratulations! Mint succeeded!\",\r\n            severity: \"success\",\r\n          });\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Mint failed! Please try again!\",\r\n            severity: \"error\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      let message = error.msg || \"Minting failed! Please try again!\";\r\n      if (!error.msg) {\r\n        if (!error.message) {\r\n          message = \"Transaction timeout! Please try again.\";\r\n        } else if (error.message.indexOf(\"0x137\")) {\r\n          console.log(error);\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf(\"0x135\")) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          console.log(error);\r\n          message = `SOLD OUT!`;\r\n          window.location.reload();\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: \"error\",\r\n      });\r\n      // updates the candy machine state to reflect the latest\r\n      // information on chain\r\n      refreshCandyMachineState();\r\n    } finally {\r\n      setIsUserMinting(false);\r\n    }\r\n  };\r\n\r\n  const toggleMintButton = () => {\r\n    let active = !isActive || isPresale;\r\n\r\n    if (active) {\r\n      if (candyMachine!.state.isWhitelistOnly && !isWhitelistUser) {\r\n        active = false;\r\n      }\r\n      if (endDate && Date.now() >= endDate.getTime()) {\r\n        active = false;\r\n      }\r\n    }\r\n\r\n    if (\r\n      isPresale &&\r\n      candyMachine!.state.goLiveDate &&\r\n      candyMachine!.state.goLiveDate.toNumber() <= new Date().getTime() / 1000\r\n    ) {\r\n      setIsPresale((candyMachine!.state.isPresale = false));\r\n    }\r\n\r\n    setIsActive((candyMachine!.state.isActive = active));\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshCandyMachineState();\r\n  }, [\r\n    anchorWallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n    refreshCandyMachineState,\r\n  ]);\r\n\r\n  return (\r\n    <Paper style={{ backgroundColor: \"transparent\" }}>\r\n      <HeaderBack></HeaderBack>\r\n      <FirstContainer>\r\n        <BackgroundImage\r\n          src=\"/assets/image/back-man1.png\"\r\n          style={matchesSM ? { bottom: \"300px\" } : { top: \"0px\" }}\r\n        />\r\n        <BackgroundImage\r\n          src=\"/assets/image/back-man2.png\"\r\n          style={{ bottom: \"-100px\" }}\r\n        />\r\n        <SingerImg\r\n          src={`/assets/image/mint-singer.png`}\r\n          alt=\"singer\"\r\n          loading=\"lazy\"\r\n        />\r\n        <RightBox>\r\n          <h1>Mint your Male singer NFT</h1>\r\n          <MintBox>\r\n            <BB />\r\n            {!wallet.connected ? (\r\n              <ConnectButton>Connect Wallet</ConnectButton>\r\n            ) : (\r\n              <>\r\n                {candyMachine && (\r\n                  <>\r\n                    <ValueViewPane>\r\n                      <TextContainder>\r\n                        <LabelText>Remaining</LabelText>\r\n                        <ValueText>{`${itemsRemaining}`}</ValueText>\r\n                      </TextContainder>\r\n                      <TextContainder>\r\n                        <LabelText>\r\n                          {isWhitelistUser && discountPrice\r\n                            ? \"Discount Price\"\r\n                            : \"Price\"}\r\n                        </LabelText>\r\n                        <ValueText>\r\n                          {isWhitelistUser && discountPrice\r\n                            ? `◎ ${formatNumber.asNumber(discountPrice)}SOL`\r\n                            : `◎ ${formatNumber.asNumber(\r\n                                candyMachine.state.price\r\n                              )}SOL`}\r\n                        </ValueText>\r\n                      </TextContainder>\r\n                      <VerticalSeparator />\r\n                      <TextContainder>\r\n                        {isActive &&\r\n                        endDate &&\r\n                        Date.now() < endDate.getTime() ? (\r\n                          <>\r\n                            <MintCountdown\r\n                              key=\"endSettings\"\r\n                              date={getCountdownDate(candyMachine)}\r\n                              style={{ justifyContent: \"flex-end\" }}\r\n                              status=\"COMPLETED\"\r\n                              onComplete={toggleMintButton}\r\n                            />\r\n                            <Typography\r\n                              variant=\"caption\"\r\n                              align=\"center\"\r\n                              display=\"block\"\r\n                              style={{\r\n                                fontWeight: \"bold\",\r\n                                color: \"rgb(150,150,150)\",\r\n                              }}\r\n                            >\r\n                              TO END OF MINT\r\n                            </Typography>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <MintCountdown\r\n                              key=\"goLive\"\r\n                              date={getCountdownDate(candyMachine)}\r\n                              style={{ justifyContent: \"flex-end\" }}\r\n                              status={\r\n                                candyMachine?.state?.isSoldOut ||\r\n                                (endDate && Date.now() > endDate.getTime())\r\n                                  ? \"COMPLETED\"\r\n                                  : isPresale\r\n                                  ? \"PRESALE\"\r\n                                  : \"LIVE\"\r\n                              }\r\n                              onComplete={toggleMintButton}\r\n                            />\r\n                            {isPresale &&\r\n                              candyMachine.state.goLiveDate &&\r\n                              candyMachine.state.goLiveDate.toNumber() >\r\n                                new Date().getTime() / 1000 && (\r\n                                <Typography\r\n                                  variant=\"caption\"\r\n                                  align=\"center\"\r\n                                  display=\"block\"\r\n                                  style={{\r\n                                    fontWeight: \"bold\",\r\n                                    color: \"rgb(150,150,150)\",\r\n                                  }}\r\n                                >\r\n                                  UNTIL PUBLIC MINT\r\n                                </Typography>\r\n                              )}\r\n                          </>\r\n                        )}\r\n                      </TextContainder>\r\n                    </ValueViewPane>\r\n                    <HorizontalSeparator />\r\n                  </>\r\n                )}\r\n\r\n                <MintContainer>\r\n                  {candyMachine?.state.isActive &&\r\n                  candyMachine?.state.gatekeeper &&\r\n                  wallet.publicKey &&\r\n                  wallet.signTransaction ? (\r\n                    <GatewayProvider\r\n                      wallet={{\r\n                        publicKey:\r\n                          wallet.publicKey ||\r\n                          new PublicKey(CANDY_MACHINE_PROGRAM),\r\n                        //@ts-ignore\r\n                        signTransaction: wallet.signTransaction,\r\n                      }}\r\n                      gatekeeperNetwork={\r\n                        candyMachine?.state?.gatekeeper?.gatekeeperNetwork\r\n                      }\r\n                      clusterUrl={rpcUrl}\r\n                      handleTransaction={async (transaction: Transaction) => {\r\n                        setIsUserMinting(true);\r\n                        const userMustSign = transaction.signatures.find(\r\n                          (sig) => sig.publicKey.equals(wallet.publicKey!)\r\n                        );\r\n                        if (userMustSign) {\r\n                          setAlertState({\r\n                            open: true,\r\n                            message: \"Please sign one-time Civic Pass issuance\",\r\n                            severity: \"info\",\r\n                          });\r\n                          try {\r\n                            transaction = await wallet.signTransaction!(\r\n                              transaction\r\n                            );\r\n                          } catch (e) {\r\n                            setAlertState({\r\n                              open: true,\r\n                              message: \"User cancelled signing\",\r\n                              severity: \"error\",\r\n                            });\r\n                            setTimeout(() => window.location.reload(), 2000);\r\n                            setIsUserMinting(false);\r\n                            throw e;\r\n                          }\r\n                        } else {\r\n                          setAlertState({\r\n                            open: true,\r\n                            message: \"Refreshing Civic Pass\",\r\n                            severity: \"info\",\r\n                          });\r\n                        }\r\n                        try {\r\n                          await sendTransaction(\r\n                            props.connection,\r\n                            wallet,\r\n                            transaction,\r\n                            [],\r\n                            true,\r\n                            \"confirmed\"\r\n                          );\r\n                          setAlertState({\r\n                            open: true,\r\n                            message: \"Please sign minting\",\r\n                            severity: \"info\",\r\n                          });\r\n                        } catch (e) {\r\n                          setAlertState({\r\n                            open: true,\r\n                            message:\r\n                              \"Solana dropped the transaction, please try again\",\r\n                            severity: \"warning\",\r\n                          });\r\n                          console.error(e);\r\n                          setTimeout(() => window.location.reload(), 2000);\r\n                          setIsUserMinting(false);\r\n                          throw e;\r\n                        }\r\n                        await onMint();\r\n                      }}\r\n                      broadcastTransaction={false}\r\n                      options={{ autoShowModal: false }}\r\n                    >\r\n                      <MintButton\r\n                        candyMachine={candyMachine}\r\n                        isMinting={isUserMinting}\r\n                        setIsMinting={(val) => setIsUserMinting(val)}\r\n                        onMint={onMint}\r\n                        isActive={isActive || (isPresale && isWhitelistUser)}\r\n                      />\r\n                    </GatewayProvider>\r\n                  ) : (\r\n                    <MintButton\r\n                      candyMachine={candyMachine}\r\n                      isMinting={isUserMinting}\r\n                      setIsMinting={(val) => setIsUserMinting(val)}\r\n                      onMint={onMint}\r\n                      isActive={isActive || (isPresale && isWhitelistUser)}\r\n                    />\r\n                  )}\r\n                </MintContainer>\r\n              </>\r\n            )}\r\n            <Typography\r\n              variant=\"caption\"\r\n              align=\"center\"\r\n              display=\"block\"\r\n              style={{ marginTop: 7, color: \"grey\" }}\r\n            >\r\n              Powered by Dokesi.art\r\n            </Typography>\r\n          </MintBox>\r\n        </RightBox>\r\n      </FirstContainer>\r\n      <SecondContainer>\r\n        <QueryLabel>\r\n          <QueryLabelTitle>Have Any Questions?</QueryLabelTitle>\r\n          <QueryLabelSub>Get in touch with us!</QueryLabelSub>\r\n        </QueryLabel>\r\n        <QueryForm>\r\n          <QueryInput\r\n            placeholder=\"Full name\"\r\n            value={fullName}\r\n            float=\"left\"\r\n            onChange={(e: any) => setFullName(e.target.value)}\r\n          />\r\n          <QueryInput\r\n            placeholder=\"E-Mail address\"\r\n            value={email}\r\n            float=\"right\"\r\n            onChange={(e: any) => setEmail(e.target.value)}\r\n          />\r\n          <QueryText\r\n            placeholder=\"Write a message\"\r\n            value={qmessage}\r\n            onChange={(e: any) => setQMessage(e.target.value)}\r\n          />\r\n          <SendMsgBtn onClick={sendMsg}>send message</SendMsgBtn>\r\n        </QueryForm>\r\n      </SecondContainer>\r\n      <Snackbar\r\n        open={alertState.open}\r\n        autoHideDuration={alertState.noHide ? null : 6000}\r\n        onClose={() => setAlertState({ ...alertState, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setAlertState({ ...alertState, open: false })}\r\n          severity={alertState.severity}\r\n        >\r\n          {alertState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst getCountdownDate = (\r\n  candyMachine: CandyMachineAccount\r\n): Date | undefined => {\r\n  if (\r\n    candyMachine.state.isActive &&\r\n    candyMachine.state.endSettings?.endSettingType.date\r\n  ) {\r\n    return toDate(candyMachine.state.endSettings.number);\r\n  }\r\n\r\n  return toDate(\r\n    candyMachine.state.goLiveDate\r\n      ? candyMachine.state.goLiveDate\r\n      : candyMachine.state.isPresale\r\n      ? new anchor.BN(new Date().getTime() / 1000)\r\n      : undefined\r\n  );\r\n};\r\n\r\nexport default Mint;\r\n","export default __webpack_public_path__ + \"static/media/LondrinaSolid-Black.f843e880.ttf\";","import { createTheme } from \"@material-ui/core/styles\";\r\nimport LondrinaSolidBlack from \"../fonts/Londrina/LondrinaSolid-Black.ttf\";\r\n\r\nconst londrinaSolidBlack = {\r\n  fontFamily: \"LondrinaSolidBlack\",\r\n  fontStyle: \"solid\",\r\n  fontDisplay: \"swap\",\r\n  fontWeight: \"900\",\r\n  src: `\r\n   local('LondrinaSolidBlack'),\r\n   local('LondrinaSolidBlack-Block'),\r\n   url(${LondrinaSolidBlack}) format('ttf')\r\n `,\r\n  unicodeRange:\r\n    \"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF\",\r\n};\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: [\"LondrinaSolidBlack\"].join(\",\"),\r\n    fontWeight: [\"300\", \"500\", \"700\", \"900\"].join(\",\"),\r\n  },\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        \"@font-face\": [londrinaSolidBlack],\r\n        boxSizing: \"border-box\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    appbarClass: {\r\n      background: `transparent`,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      fontSize: \"46px\",\r\n      lineHeight: \"100px\",\r\n      fontFamily: \"Londrina Solid\",\r\n      fontWeight: 900,\r\n      padding: \"0px 40px\",\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    copyright: {\r\n      fontFamily: \"Londrina Solid\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 300,\r\n      fontSize: \"15px\",\r\n      lineHeight: \"26px\",\r\n      /* identical to box height, or 173% */\r\n\r\n      textAlign: \"center\",\r\n      letterSpacing: \"1px\",\r\n      textTransform: \"uppercase\",\r\n\r\n      color: \"#FFFFFF\",\r\n    },\r\n    navlinks: {\r\n      margin: \"0px 90px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      position: \"relative\",\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: \"white\",\r\n      fontSize: \"17px\",\r\n      background: \"rgba(217, 217, 217, 0.45)\",\r\n      backdropFilter: \"blur(7px)\",\r\n      /* Note: backdrop-filter has minimal browser support */\r\n\r\n      borderRadius: \"130px\",\r\n      margin: \"5px\",\r\n      padding: \"10px\",\r\n      width: \"44px\",\r\n      height: \"44px\",\r\n      boxSizing: \"border-box\",\r\n      zIndex: 1,\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    linkshadow: {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      background: \"#FF3232\",\r\n      borderRadius: \"130px\",\r\n      zIndex: 0,\r\n      width: \"44px\",\r\n      height: \"44px\",\r\n      transform: \"translate(-50%, -50%)\",\r\n    },\r\n  })\r\n);\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const matchesXS = useMediaQuery(\"(max-width:750px)\");\r\n\r\n  const goToHome = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"relative\" className={classes.appbarClass}>\r\n        <Toolbar\r\n          style={\r\n            matchesXS\r\n              ? { flexDirection: \"column\", padding: \"0px\" }\r\n              : { padding: \"0px\" }\r\n          }\r\n        >\r\n          <Typography\r\n            className={classes.title}\r\n            style={matchesXS ? { order: 1 } : {}}\r\n          >\r\n            DOKESI\r\n          </Typography>\r\n          <Typography\r\n            className={classes.copyright}\r\n            style={matchesXS ? { order: 3 } : { flexGrow: 1 }}\r\n            onClick={goToHome}\r\n          >\r\n            Copyright @ 2022 Dokesi\r\n          </Typography>\r\n          <div style={matchesXS ? { order: 2 } : {}}>\r\n            <div\r\n              className={classes.navlinks}\r\n              style={matchesXS ? { margin: \"auto\" } : {}}\r\n            >\r\n              <a\r\n                href=\"https://magiceden.io/marketplace/dkst\"\r\n                style={{ position: \"relative\" }}\r\n              >\r\n                <div className={classes.linkshadow} />\r\n                <img\r\n                  src=\"/assets/icon/ship.png\"\r\n                  className={classes.link}\r\n                  alt=\"Magic Eden\"\r\n                />\r\n              </a>\r\n              <a\r\n                href=\"https://twitter.com/Dokesi_NFTs\"\r\n                style={{ position: \"relative\" }}\r\n              >\r\n                <div className={classes.linkshadow} />\r\n                <img\r\n                  src=\"/assets/icon/twitter.png\"\r\n                  className={classes.link}\r\n                  alt=\"Twitter\"\r\n                />\r\n              </a>\r\n              <a\r\n                href=\"https://discord.gg/zG5GPSMVMB\"\r\n                style={{ position: \"relative\" }}\r\n              >\r\n                <div className={classes.linkshadow} />\r\n                <img\r\n                  src=\"/assets/icon/discord.png\"\r\n                  className={classes.link}\r\n                  alt=\"Discord\"\r\n                />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\r\nimport { useMemo } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport * as anchor from \"@project-serum/anchor\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Mint from \"./pages/Mint\";\r\nimport { DEFAULT_TIMEOUT } from \"./services/connection\";\r\nimport { clusterApiUrl } from \"@solana/web3.js\";\r\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\r\nimport {\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n} from \"@solana/wallet-adapter-wallets\";\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from \"@solana/wallet-adapter-react\";\r\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\r\n\r\nimport { ThemeProvider, Paper } from \"@material-ui/core\";\r\n\r\nimport theme from \"./components/Theme\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./pages/Home\";\r\n\r\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\r\n  try {\r\n    const candyMachineId = new anchor.web3.PublicKey(\r\n      process.env.REACT_APP_CANDY_MACHINE_ID!\r\n    );\r\n\r\n    return candyMachineId;\r\n  } catch (e) {\r\n    console.log(\"Failed to construct CandyMachineId\", e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst candyMachineId = getCandyMachineId();\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(\r\n  rpcHost ? rpcHost : anchor.web3.clusterApiUrl(\"devnet\")\r\n);\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSolflareWallet(),\r\n      getSlopeWallet(),\r\n      getSolletWallet({ network }),\r\n      getSolletExtensionWallet({ network }),\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletDialogProvider>\r\n            <Router>\r\n              <Paper style={{ backgroundColor: \"black\" }}>\r\n                <Navbar />\r\n                <Routes>\r\n                  <Route path=\"/\" element={<Home />} />\r\n                  <Route\r\n                    path=\"/mint\"\r\n                    element={\r\n                      <Mint\r\n                        candyMachineId={candyMachineId}\r\n                        connection={connection}\r\n                        txTimeout={DEFAULT_TIMEOUT}\r\n                        rpcHost={rpcHost}\r\n                      />\r\n                    }\r\n                  />\r\n                </Routes>\r\n                <Footer />\r\n              </Paper>\r\n            </Router>\r\n          </WalletDialogProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import * as anchor from '@project-serum/anchor';\r\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport {\r\n  LAMPORTS_PER_SOL,\r\n  SYSVAR_RENT_PUBKEY,\r\n  TransactionInstruction,\r\n} from '@solana/web3.js';\r\n\r\nexport interface AlertState {\r\n  open: boolean;\r\n  message: string;\r\n  severity: 'success' | 'info' | 'warning' | 'error' | undefined;\r\n  noHide?: boolean;\r\n}\r\n\r\nexport const toDate = (value?: anchor.BN) => {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  return new Date(value.toNumber() * 1000);\r\n};\r\n\r\nconst numberFormater = new Intl.NumberFormat('en-US', {\r\n  style: 'decimal',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport const formatNumber = {\r\n  format: (val?: number) => {\r\n    if (!val) {\r\n      return '--';\r\n    }\r\n\r\n    return numberFormater.format(val);\r\n  },\r\n  asNumber: (val?: anchor.BN) => {\r\n    if (!val) {\r\n      return undefined;\r\n    }\r\n\r\n    return val.toNumber() / LAMPORTS_PER_SOL;\r\n  },\r\n};\r\n\r\nexport const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID =\r\n  new anchor.web3.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\r\n\r\nexport const CIVIC = new anchor.web3.PublicKey(\r\n  'gatem74V238djXdzWnJf94Wo1DcnuGkfijbf3AuBhfs',\r\n);\r\n\r\nexport const getAtaForMint = async (\r\n  mint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\r\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport const getNetworkExpire = async (\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [gatekeeperNetwork.toBuffer(), Buffer.from('expire')],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport const getNetworkToken = async (\r\n  wallet: anchor.web3.PublicKey,\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [\r\n      wallet.toBuffer(),\r\n      Buffer.from('gateway'),\r\n      Buffer.from([0, 0, 0, 0, 0, 0, 0, 0]),\r\n      gatekeeperNetwork.toBuffer(),\r\n    ],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport function createAssociatedTokenAccountInstruction(\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) {\r\n  const keys = [\r\n    {\r\n      pubkey: payer,\r\n      isSigner: true,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: associatedTokenAddress,\r\n      isSigner: false,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: walletAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: splTokenMintAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: TOKEN_PROGRAM_ID,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n}\r\n","import {\r\n  Keypair,\r\n  Commitment,\r\n  Connection,\r\n  RpcResponseAndContext,\r\n  SignatureStatus,\r\n  SimulatedTransactionResponse,\r\n  Transaction,\r\n  TransactionInstruction,\r\n  TransactionSignature,\r\n  Blockhash,\r\n  FeeCalculator,\r\n} from '@solana/web3.js';\r\n\r\nimport { WalletNotConnectedError } from '@solana/wallet-adapter-base';\r\n\r\ninterface BlockhashAndFeeCalculator {\r\n  blockhash: Blockhash;\r\n  feeCalculator: FeeCalculator;\r\n}\r\n\r\nexport const DEFAULT_TIMEOUT = 60000;\r\n\r\nexport const getErrorForTransaction = async (\r\n  connection: Connection,\r\n  txid: string,\r\n) => {\r\n  // wait for all confirmation before geting transaction\r\n  await connection.confirmTransaction(txid, 'max');\r\n\r\n  const tx = await connection.getParsedConfirmedTransaction(txid);\r\n\r\n  const errors: string[] = [];\r\n  if (tx?.meta && tx.meta.logMessages) {\r\n    tx.meta.logMessages.forEach(log => {\r\n      const regex = /Error: (.*)/gm;\r\n      let m;\r\n      while ((m = regex.exec(log)) !== null) {\r\n        // This is necessary to avoid infinite loops with zero-width matches\r\n        if (m.index === regex.lastIndex) {\r\n          regex.lastIndex++;\r\n        }\r\n\r\n        if (m.length > 1) {\r\n          errors.push(m[1]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport enum SequenceType {\r\n  Sequential,\r\n  Parallel,\r\n  StopOnFailure,\r\n}\r\n\r\nexport async function sendTransactionsWithManualRetry(\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[][],\r\n  signers: Keypair[][],\r\n): Promise<(string | undefined)[]> {\r\n  let stopPoint = 0;\r\n  let tries = 0;\r\n  let lastInstructionsLength = null;\r\n  let toRemoveSigners: Record<number, boolean> = {};\r\n  instructions = instructions.filter((instr, i) => {\r\n    if (instr.length > 0) {\r\n      return true;\r\n    } else {\r\n      toRemoveSigners[i] = true;\r\n      return false;\r\n    }\r\n  });\r\n  let ids: string[] = [];\r\n  let filteredSigners = signers.filter((_, i) => !toRemoveSigners[i]);\r\n\r\n  while (stopPoint < instructions.length && tries < 3) {\r\n    instructions = instructions.slice(stopPoint, instructions.length);\r\n    filteredSigners = filteredSigners.slice(stopPoint, filteredSigners.length);\r\n\r\n    if (instructions.length === lastInstructionsLength) tries = tries + 1;\r\n    else tries = 0;\r\n\r\n    try {\r\n      if (instructions.length === 1) {\r\n        const id = await sendTransactionWithRetry(\r\n          connection,\r\n          wallet,\r\n          instructions[0],\r\n          filteredSigners[0],\r\n          'single',\r\n        );\r\n        ids.push(id.txid);\r\n        stopPoint = 1;\r\n      } else {\r\n        const { txs } = await sendTransactions(\r\n          connection,\r\n          wallet,\r\n          instructions,\r\n          filteredSigners,\r\n          SequenceType.StopOnFailure,\r\n          'single',\r\n        );\r\n        ids = ids.concat(txs.map(t => t.txid));\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    console.log(\r\n      'Died on ',\r\n      stopPoint,\r\n      'retrying from instruction',\r\n      instructions[stopPoint],\r\n      'instructions length is',\r\n      instructions.length,\r\n    );\r\n    lastInstructionsLength = instructions.length;\r\n  }\r\n\r\n  return ids;\r\n}\r\n\r\nexport const sendTransactions = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructionSet: TransactionInstruction[][],\r\n  signersSet: Keypair[][],\r\n  sequenceType: SequenceType = SequenceType.Parallel,\r\n  commitment: Commitment = 'singleGossip',\r\n  successCallback: (txid: string, ind: number) => void = (txid, ind) => {},\r\n  failCallback: (reason: string, ind: number) => boolean = (txid, ind) => false,\r\n  block?: BlockhashAndFeeCalculator,\r\n  beforeTransactions: Transaction[] = [],\r\n  afterTransactions: Transaction[] = [],\r\n): Promise<{ number: number; txs: { txid: string; slot: number }[] }> => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  const unsignedTxns: Transaction[] = beforeTransactions;\r\n\r\n  if (!block) {\r\n    block = await connection.getRecentBlockhash(commitment);\r\n  }\r\n\r\n  for (let i = 0; i < instructionSet.length; i++) {\r\n    const instructions = instructionSet[i];\r\n    const signers = signersSet[i];\r\n\r\n    if (instructions.length === 0) {\r\n      continue;\r\n    }\r\n\r\n    let transaction = new Transaction();\r\n    instructions.forEach(instruction => transaction.add(instruction));\r\n    transaction.recentBlockhash = block.blockhash;\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n\r\n    if (signers.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n\r\n    unsignedTxns.push(transaction);\r\n  }\r\n  unsignedTxns.push(...afterTransactions);\r\n\r\n  const partiallySignedTransactions = unsignedTxns.filter(t =>\r\n    t.signatures.find(sig => sig.publicKey.equals(wallet.publicKey)),\r\n  );\r\n  const fullySignedTransactions = unsignedTxns.filter(\r\n    t => !t.signatures.find(sig => sig.publicKey.equals(wallet.publicKey)),\r\n  );\r\n  let signedTxns = await wallet.signAllTransactions(\r\n    partiallySignedTransactions,\r\n  );\r\n  signedTxns = fullySignedTransactions.concat(signedTxns);\r\n  const pendingTxns: Promise<{ txid: string; slot: number }>[] = [];\r\n\r\n  console.log(\r\n    'Signed txns length',\r\n    signedTxns.length,\r\n    'vs handed in length',\r\n    instructionSet.length,\r\n  );\r\n  for (let i = 0; i < signedTxns.length; i++) {\r\n    const signedTxnPromise = sendSignedTransaction({\r\n      connection,\r\n      signedTransaction: signedTxns[i],\r\n    });\r\n\r\n    if (sequenceType !== SequenceType.Parallel) {\r\n      try {\r\n        await signedTxnPromise.then(({ txid, slot }) =>\r\n          successCallback(txid, i),\r\n        );\r\n        pendingTxns.push(signedTxnPromise);\r\n      } catch (e) {\r\n        console.log('Failed at txn index:', i);\r\n        console.log('Caught failure:', e);\r\n\r\n        failCallback(signedTxns[i], i);\r\n        if (sequenceType === SequenceType.StopOnFailure) {\r\n          return {\r\n            number: i,\r\n            txs: await Promise.all(pendingTxns),\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      pendingTxns.push(signedTxnPromise);\r\n    }\r\n  }\r\n\r\n  if (sequenceType !== SequenceType.Parallel) {\r\n    const result = await Promise.all(pendingTxns);\r\n    return { number: signedTxns.length, txs: result };\r\n  }\r\n\r\n  return { number: signedTxns.length, txs: await Promise.all(pendingTxns) };\r\n};\r\n\r\nexport const sendTransaction = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[] | Transaction,\r\n  signers: Keypair[],\r\n  awaitConfirmation = true,\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction: Transaction;\r\n  if (instructions instanceof Transaction) {\r\n    transaction = instructions;\r\n  } else {\r\n    transaction = new Transaction();\r\n    instructions.forEach(instruction => transaction.add(instruction));\r\n    transaction.recentBlockhash = (\r\n      block || (await connection.getRecentBlockhash(commitment))\r\n    ).blockhash;\r\n\r\n    if (includesFeePayer) {\r\n      transaction.setSigners(...signers.map(s => s.publicKey));\r\n    } else {\r\n      transaction.setSigners(\r\n        // fee payed by the wallet owner\r\n        wallet.publicKey,\r\n        ...signers.map(s => s.publicKey),\r\n      );\r\n    }\r\n\r\n    if (signers.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n    if (!includesFeePayer) {\r\n      transaction = await wallet.signTransaction(transaction);\r\n    }\r\n  }\r\n\r\n  const rawTransaction = transaction.serialize();\r\n  let options = {\r\n    skipPreflight: true,\r\n    commitment,\r\n  };\r\n\r\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\r\n  let slot = 0;\r\n\r\n  if (awaitConfirmation) {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      DEFAULT_TIMEOUT,\r\n      connection,\r\n      commitment,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    slot = confirmation?.slot || 0;\r\n\r\n    if (confirmation?.err) {\r\n      const errors = await getErrorForTransaction(connection, txid);\r\n\r\n      console.log(errors);\r\n      throw new Error(`Raw transaction ${txid} failed`);\r\n    }\r\n  }\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const sendTransactionWithRetry = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n  beforeSend?: () => void,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  if (beforeSend) {\r\n    beforeSend();\r\n  }\r\n\r\n  const { txid, slot } = await sendSignedTransaction({\r\n    connection,\r\n    signedTransaction: transaction,\r\n  });\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<{ txid: string; slot: number }> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n\r\n  const startTime = getUnixTs();\r\n  let slot = 0;\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(500);\r\n    }\r\n  })();\r\n  try {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      timeout,\r\n      connection,\r\n      'recent',\r\n      true,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n\r\n    if (confirmation.err) {\r\n      console.error(confirmation.err);\r\n      throw new Error('Transaction failed: Custom instruction error');\r\n    }\r\n\r\n    slot = confirmation?.slot || 0;\r\n  } catch (err: any) {\r\n    console.error('Timeout Error caught', err);\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    let simulateResult: SimulatedTransactionResponse | null = null;\r\n    try {\r\n      simulateResult = (\r\n        await simulateTransaction(connection, signedTransaction, 'single')\r\n      ).value;\r\n    } catch (e) {}\r\n    if (simulateResult && simulateResult.err) {\r\n      if (simulateResult.logs) {\r\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\r\n          const line = simulateResult.logs[i];\r\n          if (line.startsWith('Program log: ')) {\r\n            throw new Error(\r\n              'Transaction failed: ' + line.slice('Program log: '.length),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      throw new Error(JSON.stringify(simulateResult.err));\r\n    }\r\n    // throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return { txid, slot };\r\n}\r\n\r\nasync function simulateTransaction(\r\n  connection: Connection,\r\n  transaction: Transaction,\r\n  commitment: Commitment,\r\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\r\n  // @ts-ignore\r\n  transaction.recentBlockhash = await connection._recentBlockhash(\r\n    // @ts-ignore\r\n    connection._disableBlockhashCaching,\r\n  );\r\n\r\n  const signData = transaction.serializeMessage();\r\n  // @ts-ignore\r\n  const wireTransaction = transaction._serialize(signData);\r\n  const encodedTransaction = wireTransaction.toString('base64');\r\n  const config: any = { encoding: 'base64', commitment };\r\n  const args = [encodedTransaction, config];\r\n\r\n  // @ts-ignore\r\n  const res = await connection._rpcRequest('simulateTransaction', args);\r\n  if (res.error) {\r\n    throw new Error('failed to simulate transaction: ' + res.error.message);\r\n  }\r\n  return res.result;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n  commitment: Commitment = 'recent',\r\n  queryStatus = false,\r\n): Promise<SignatureStatus | null | void> {\r\n  let done = false;\r\n  let status: SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n    try {\r\n      subId = connection.onSignature(\r\n        txid,\r\n        (result, context) => {\r\n          done = true;\r\n          status = {\r\n            err: result.err,\r\n            slot: context.slot,\r\n            confirmations: 0,\r\n          };\r\n          if (result.err) {\r\n            console.log('Rejected via websocket', result.err);\r\n            reject(status);\r\n          } else {\r\n            console.log('Resolved via websocket', result);\r\n            resolve(status);\r\n          }\r\n        },\r\n        commitment,\r\n      );\r\n    } catch (e) {\r\n      done = true;\r\n      console.error('WS error in setup', txid, e);\r\n    }\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId])\r\n    connection.removeSignatureListener(subId);\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n}\r\nexport function sleep(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import * as anchor from '@project-serum/anchor';\r\n\r\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\r\nimport {\r\n  SystemProgram,\r\n  Transaction,\r\n  SYSVAR_SLOT_HASHES_PUBKEY,\r\n} from '@solana/web3.js';\r\nimport { sendTransactions, SequenceType } from './connection';\r\n\r\nimport {\r\n  CIVIC,\r\n  getAtaForMint,\r\n  getNetworkExpire,\r\n  getNetworkToken,\r\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n} from './utils';\r\n\r\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\r\n  'cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ',\r\n);\r\n\r\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\r\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\r\n);\r\n\r\ninterface CandyMachineState {\r\n  authority: anchor.web3.PublicKey;\r\n  itemsAvailable: number;\r\n  itemsRedeemed: number;\r\n  itemsRemaining: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  tokenMint: anchor.web3.PublicKey;\r\n  isSoldOut: boolean;\r\n  isActive: boolean;\r\n  isPresale: boolean;\r\n  isWhitelistOnly: boolean;\r\n  goLiveDate: anchor.BN;\r\n  price: anchor.BN;\r\n  gatekeeper: null | {\r\n    expireOnUse: boolean;\r\n    gatekeeperNetwork: anchor.web3.PublicKey;\r\n  };\r\n  endSettings: null | {\r\n    number: anchor.BN;\r\n    endSettingType: any;\r\n  };\r\n  whitelistMintSettings: null | {\r\n    mode: any;\r\n    mint: anchor.web3.PublicKey;\r\n    presale: boolean;\r\n    discountPrice: null | anchor.BN;\r\n  };\r\n  hiddenSettings: null | {\r\n    name: string;\r\n    uri: string;\r\n    hash: Uint8Array;\r\n  };\r\n  retainAuthority: boolean;\r\n}\r\n\r\nexport interface CandyMachineAccount {\r\n  id: anchor.web3.PublicKey;\r\n  program: anchor.Program;\r\n  state: CandyMachineState;\r\n}\r\n\r\nexport const awaitTransactionSignatureConfirmation = async (\r\n  txid: anchor.web3.TransactionSignature,\r\n  timeout: number,\r\n  connection: anchor.web3.Connection,\r\n  queryStatus = false,\r\n): Promise<anchor.web3.SignatureStatus | null | void> => {\r\n  let done = false;\r\n  let status: anchor.web3.SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId]) {\r\n    connection.removeSignatureListener(subId);\r\n  }\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n};\r\n\r\nconst createAssociatedTokenAccountInstruction = (\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) => {\r\n  const keys = [\r\n    { pubkey: payer, isSigner: true, isWritable: true },\r\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\r\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\r\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new anchor.web3.TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n};\r\n\r\nexport const getCandyMachineState = async (\r\n  anchorWallet: anchor.Wallet,\r\n  candyMachineId: anchor.web3.PublicKey,\r\n  connection: anchor.web3.Connection,\r\n): Promise<CandyMachineAccount> => {\r\n  const provider = new anchor.Provider(connection, anchorWallet, {\r\n    preflightCommitment: 'processed',\r\n  });\r\n\r\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const program = new anchor.Program(idl!, CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\r\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\r\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\r\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\r\n\r\n  return {\r\n    id: candyMachineId,\r\n    program,\r\n    state: {\r\n      authority: state.authority,\r\n      itemsAvailable,\r\n      itemsRedeemed,\r\n      itemsRemaining,\r\n      isSoldOut: itemsRemaining === 0,\r\n      isActive: false,\r\n      isPresale: false,\r\n      isWhitelistOnly: false,\r\n      goLiveDate: state.data.goLiveDate,\r\n      treasury: state.wallet,\r\n      tokenMint: state.tokenMint,\r\n      gatekeeper: state.data.gatekeeper,\r\n      endSettings: state.data.endSettings,\r\n      whitelistMintSettings: state.data.whitelistMintSettings,\r\n      hiddenSettings: state.data.hiddenSettings,\r\n      price: state.data.price,\r\n      retainAuthority: state.data.retainAuthority,\r\n    },\r\n  };\r\n};\r\n\r\nconst getMasterEdition = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n        Buffer.from('edition'),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nconst getMetadata = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nexport const getCandyMachineCreator = async (\r\n  candyMachine: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('candy_machine'), candyMachine.toBuffer()],\r\n    CANDY_MACHINE_PROGRAM,\r\n  );\r\n};\r\n\r\nexport const getCollectionPDA = async (\r\n  candyMachineAddress: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('collection'), candyMachineAddress.toBuffer()],\r\n    CANDY_MACHINE_PROGRAM,\r\n  );\r\n};\r\n\r\nexport interface CollectionData {\r\n  mint: anchor.web3.PublicKey;\r\n  candyMachine: anchor.web3.PublicKey;\r\n}\r\n\r\nexport const getCollectionAuthorityRecordPDA = async (\r\n  mint: anchor.web3.PublicKey,\r\n  newAuthority: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n        Buffer.from('collection_authority'),\r\n        newAuthority.toBuffer(),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nexport type SetupState = {\r\n  mint: anchor.web3.Keypair;\r\n  userTokenAccount: anchor.web3.PublicKey;\r\n  transaction: string;\r\n};\r\n\r\nexport const createAccountsForMint = async (\r\n  candyMachine: CandyMachineAccount,\r\n  payer: anchor.web3.PublicKey,\r\n): Promise<SetupState> => {\r\n  const mint = anchor.web3.Keypair.generate();\r\n  const userTokenAccountAddress = (\r\n    await getAtaForMint(mint.publicKey, payer)\r\n  )[0];\r\n\r\n  const signers: anchor.web3.Keypair[] = [mint];\r\n  const instructions = [\r\n    anchor.web3.SystemProgram.createAccount({\r\n      fromPubkey: payer,\r\n      newAccountPubkey: mint.publicKey,\r\n      space: MintLayout.span,\r\n      lamports:\r\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\r\n          MintLayout.span,\r\n        ),\r\n      programId: TOKEN_PROGRAM_ID,\r\n    }),\r\n    Token.createInitMintInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      0,\r\n      payer,\r\n      payer,\r\n    ),\r\n    createAssociatedTokenAccountInstruction(\r\n      userTokenAccountAddress,\r\n      payer,\r\n      payer,\r\n      mint.publicKey,\r\n    ),\r\n    Token.createMintToInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      userTokenAccountAddress,\r\n      payer,\r\n      [],\r\n      1,\r\n    ),\r\n  ];\r\n\r\n  return {\r\n    mint: mint,\r\n    userTokenAccount: userTokenAccountAddress,\r\n    transaction: (\r\n      await sendTransactions(\r\n        candyMachine.program.provider.connection,\r\n        candyMachine.program.provider.wallet,\r\n        [instructions],\r\n        [signers],\r\n        SequenceType.StopOnFailure,\r\n        'singleGossip',\r\n        () => {},\r\n        () => false,\r\n        undefined,\r\n        [],\r\n        [],\r\n      )\r\n    ).txs[0].txid,\r\n  };\r\n};\r\n\r\nexport const mintOneToken = async (\r\n  candyMachine: CandyMachineAccount,\r\n  payer: anchor.web3.PublicKey,\r\n  beforeTransactions: Transaction[] = [],\r\n  afterTransactions: Transaction[] = [],\r\n  setupState?: SetupState,\r\n): Promise<string[]> => {\r\n  const mint = setupState?.mint ?? anchor.web3.Keypair.generate();\r\n  const userTokenAccountAddress = (\r\n    await getAtaForMint(mint.publicKey, payer)\r\n  )[0];\r\n\r\n  const userPayingAccountAddress = candyMachine.state.tokenMint\r\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\r\n    : payer;\r\n\r\n  const candyMachineAddress = candyMachine.id;\r\n  const remainingAccounts = [];\r\n  const cleanupInstructions = [];\r\n  const instructions = [];\r\n  const signers: anchor.web3.Keypair[] = [];\r\n  console.log('SetupState: ', setupState);\r\n  if (!setupState) {\r\n    signers.push(mint);\r\n    instructions.push(\r\n      ...[\r\n        anchor.web3.SystemProgram.createAccount({\r\n          fromPubkey: payer,\r\n          newAccountPubkey: mint.publicKey,\r\n          space: MintLayout.span,\r\n          lamports:\r\n            await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\r\n              MintLayout.span,\r\n            ),\r\n          programId: TOKEN_PROGRAM_ID,\r\n        }),\r\n        Token.createInitMintInstruction(\r\n          TOKEN_PROGRAM_ID,\r\n          mint.publicKey,\r\n          0,\r\n          payer,\r\n          payer,\r\n        ),\r\n        createAssociatedTokenAccountInstruction(\r\n          userTokenAccountAddress,\r\n          payer,\r\n          payer,\r\n          mint.publicKey,\r\n        ),\r\n        Token.createMintToInstruction(\r\n          TOKEN_PROGRAM_ID,\r\n          mint.publicKey,\r\n          userTokenAccountAddress,\r\n          payer,\r\n          [],\r\n          1,\r\n        ),\r\n      ],\r\n    );\r\n  }\r\n\r\n  if (candyMachine.state.gatekeeper) {\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getNetworkToken(\r\n          payer,\r\n          candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n\r\n    if (candyMachine.state.gatekeeper.expireOnUse) {\r\n      remainingAccounts.push({\r\n        pubkey: CIVIC,\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: (\r\n          await getNetworkExpire(\r\n            candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n          )\r\n        )[0],\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n    }\r\n  }\r\n  if (candyMachine.state.whitelistMintSettings) {\r\n    const mint = new anchor.web3.PublicKey(\r\n      candyMachine.state.whitelistMintSettings.mint,\r\n    );\r\n\r\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\r\n    remainingAccounts.push({\r\n      pubkey: whitelistToken,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n\r\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\r\n      const whitelistBurnAuthority = anchor.web3.Keypair.generate();\r\n\r\n      remainingAccounts.push({\r\n        pubkey: mint,\r\n        isWritable: true,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: whitelistBurnAuthority.publicKey,\r\n        isWritable: false,\r\n        isSigner: true,\r\n      });\r\n      signers.push(whitelistBurnAuthority);\r\n      const exists =\r\n        await candyMachine.program.provider.connection.getAccountInfo(\r\n          whitelistToken,\r\n        );\r\n      if (exists) {\r\n        instructions.push(\r\n          Token.createApproveInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            whitelistBurnAuthority.publicKey,\r\n            payer,\r\n            [],\r\n            1,\r\n          ),\r\n        );\r\n        cleanupInstructions.push(\r\n          Token.createRevokeInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            payer,\r\n            [],\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (candyMachine.state.tokenMint) {\r\n    const transferAuthority = anchor.web3.Keypair.generate();\r\n\r\n    signers.push(transferAuthority);\r\n    remainingAccounts.push({\r\n      pubkey: userPayingAccountAddress,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: transferAuthority.publicKey,\r\n      isWritable: false,\r\n      isSigner: true,\r\n    });\r\n\r\n    instructions.push(\r\n      Token.createApproveInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        transferAuthority.publicKey,\r\n        payer,\r\n        [],\r\n        candyMachine.state.price.toNumber(),\r\n      ),\r\n    );\r\n    cleanupInstructions.push(\r\n      Token.createRevokeInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        payer,\r\n        [],\r\n      ),\r\n    );\r\n  }\r\n  const metadataAddress = await getMetadata(mint.publicKey);\r\n  const masterEdition = await getMasterEdition(mint.publicKey);\r\n\r\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\r\n    candyMachineAddress,\r\n  );\r\n\r\n  console.log(remainingAccounts.map(rm => rm.pubkey.toBase58()));\r\n  instructions.push(\r\n    await candyMachine.program.instruction.mintNft(creatorBump, {\r\n      accounts: {\r\n        candyMachine: candyMachineAddress,\r\n        candyMachineCreator,\r\n        payer: payer,\r\n        wallet: candyMachine.state.treasury,\r\n        mint: mint.publicKey,\r\n        metadata: metadataAddress,\r\n        masterEdition,\r\n        mintAuthority: payer,\r\n        updateAuthority: payer,\r\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\r\n        tokenProgram: TOKEN_PROGRAM_ID,\r\n        systemProgram: SystemProgram.programId,\r\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n        recentBlockhashes: SYSVAR_SLOT_HASHES_PUBKEY,\r\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\r\n      },\r\n      remainingAccounts:\r\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\r\n    }),\r\n  );\r\n\r\n  const [collectionPDA] = await getCollectionPDA(candyMachineAddress);\r\n  const collectionPDAAccount =\r\n    await candyMachine.program.provider.connection.getAccountInfo(\r\n      collectionPDA,\r\n    );\r\n\r\n  if (collectionPDAAccount && candyMachine.state.retainAuthority) {\r\n    try {\r\n      const collectionData =\r\n        (await candyMachine.program.account.collectionPda.fetch(\r\n          collectionPDA,\r\n        )) as CollectionData;\r\n      console.log(collectionData);\r\n      const collectionMint = collectionData.mint;\r\n      const collectionAuthorityRecord = await getCollectionAuthorityRecordPDA(\r\n        collectionMint,\r\n        collectionPDA,\r\n      );\r\n      console.log(collectionMint);\r\n      if (collectionMint) {\r\n        const collectionMetadata = await getMetadata(collectionMint);\r\n        const collectionMasterEdition = await getMasterEdition(collectionMint);\r\n        console.log('Collection PDA: ', collectionPDA.toBase58());\r\n        console.log('Authority: ', candyMachine.state.authority.toBase58());\r\n        instructions.push(\r\n          await candyMachine.program.instruction.setCollectionDuringMint({\r\n            accounts: {\r\n              candyMachine: candyMachineAddress,\r\n              metadata: metadataAddress,\r\n              payer: payer,\r\n              collectionPda: collectionPDA,\r\n              tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\r\n              instructions: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\r\n              collectionMint,\r\n              collectionMetadata,\r\n              collectionMasterEdition,\r\n              authority: candyMachine.state.authority,\r\n              collectionAuthorityRecord,\r\n            },\r\n          }),\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const instructionsMatrix = [instructions, cleanupInstructions];\r\n  const signersMatrix = [signers, []];\r\n\r\n  try {\r\n    return (\r\n      await sendTransactions(\r\n        candyMachine.program.provider.connection,\r\n        candyMachine.program.provider.wallet,\r\n        instructionsMatrix,\r\n        signersMatrix,\r\n        SequenceType.StopOnFailure,\r\n        'singleGossip',\r\n        () => {},\r\n        () => false,\r\n        undefined,\r\n        beforeTransactions,\r\n        afterTransactions,\r\n      )\r\n    ).txs.map(t => t.txid);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const shortenAddress = (address: string, chars = 4): string => {\r\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\r\n};\r\n\r\nconst sleep = (ms: number): Promise<void> => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n"],"sourceRoot":""}